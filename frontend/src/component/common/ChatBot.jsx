import React, { useState } from 'react';
import ApiService from '../../service/ApiService';
import '../../style/chatbot.css';

const ChatBot = () => {
    const [isOpen, setIsOpen] = useState(false);
    const [message, setMessage] = useState('');
    const [chatHistory, setChatHistory] = useState([]);
    const [isLoading, setIsLoading] = useState(false);

    const handleSubmit = async (e) => {
        e.preventDefault();
        if (!message.trim()) return;

        try {
            // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa user
            setChatHistory(prev => [...prev, {
                type: 'user',
                content: message
            }]);
            
            // B·∫≠t tr·∫°ng th√°i loading
            setIsLoading(true);
            
            // G·ªçi API ƒë·ªÉ l·∫•y ph·∫£n h·ªìi t·ª´ bot
            const response = await ApiService.chatWithBot(message);
            
            // Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ bot
            setChatHistory(prev => [...prev, {
                type: 'bot',
                content: response
            }]);

        } catch (error) {
            console.error('L·ªói:', error);
            // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
            setChatHistory(prev => [...prev, {
                type: 'bot',
                content: 'Xin l·ªói, t√¥i ƒëang g·∫∑p s·ª± c·ªë. Vui l√≤ng th·ª≠ l·∫°i sau.'
            }]);
        } finally {
            // T·∫Øt tr·∫°ng th√°i loading v√† x√≥a tin nh·∫Øn
            setIsLoading(false);
            setMessage('');
        }
    };

    return (
        <div className="chatbot-container">
            {/* Chat bot icon */}
            <button 
                className={`chatbot-toggle ${isOpen ? 'open' : ''}`}
                onClick={() => setIsOpen(!isOpen)}
            >
                {isOpen ? '√ó' : 'üí¨'}
            </button>

            {/* Chat window */}
            {isOpen && (
                <div className="chatbot-window">
                    <div className="chatbot-header">
                        <h3>Chat Bot</h3>
                    </div>
                    
                    <div className="chatbot-messages">
                        {chatHistory.map((chat, index) => (
                            <div key={index} className={`message ${chat.type}`}>
                                {chat.content}
                            </div>
                        ))}
                        {isLoading && (
                            <div className="message bot loading">
                                ƒêang nh·∫≠p...
                            </div>
                        )}
                    </div>

                    <form onSubmit={handleSubmit} className="chatbot-input">
                        <input
                            type="text"
                            value={message}
                            onChange={(e) => setMessage(e.target.value)}
                            placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
                            disabled={isLoading}
                        />
                        <button type="submit" disabled={isLoading}>
                            {isLoading ? 'ƒêang g·ª≠i...' : 'G·ª≠i'}
                        </button>
                    </form>
                </div>
            )}
        </div>
    );
};

export default ChatBot;
