{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI GF63\\\\Desktop\\\\ShoppingWeb\\\\frontend\\\\src\\\\component\\\\common\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ApiService from '../../service/ApiService';\nimport '../../style/chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    try {\n      // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa user\n      setChatHistory(prev => [...prev, {\n        type: 'user',\n        content: message\n      }]);\n\n      // B·∫≠t tr·∫°ng th√°i loading\n      setIsLoading(true);\n\n      // G·ªçi API ƒë·ªÉ l·∫•y ph·∫£n h·ªìi t·ª´ bot\n      const response = await ApiService.chatWithBot(message);\n\n      // Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ bot\n      setChatHistory(prev => [...prev, {\n        type: 'bot',\n        content: response\n      }]);\n    } catch (error) {\n      console.error('L·ªói:', error);\n      // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói\n      setChatHistory(prev => [...prev, {\n        type: 'bot',\n        content: 'Xin l·ªói, t√¥i ƒëang g·∫∑p s·ª± c·ªë. Vui l√≤ng th·ª≠ l·∫°i sau.'\n      }]);\n    } finally {\n      // T·∫Øt tr·∫°ng th√°i loading v√† x√≥a tin nh·∫Øn\n      setIsLoading(false);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chatbot-toggle ${isOpen ? 'open' : ''}`,\n      onClick: () => setIsOpen(!isOpen),\n      children: isOpen ? '√ó' : 'üí¨'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${chat.type}`,\n          children: chat.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot loading\",\n          children: \"\\u0110ang nh\\u1EADp...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'ƒêang g·ª≠i...' : 'G·ª≠i'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBot, \"etJ5Vfmyw/7LJ7091Q+bVsMqSD4=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","ApiService","jsxDEV","_jsxDEV","ChatBot","_s","isOpen","setIsOpen","message","setMessage","chatHistory","setChatHistory","isLoading","setIsLoading","handleSubmit","e","preventDefault","trim","prev","type","content","response","chatWithBot","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","index","onSubmit","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/MSI GF63/Desktop/ShoppingWeb/frontend/src/component/common/ChatBot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ApiService from '../../service/ApiService';\r\nimport '../../style/chatbot.css';\r\n\r\nconst ChatBot = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!message.trim()) return;\r\n\r\n        try {\r\n            // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa user\r\n            setChatHistory(prev => [...prev, {\r\n                type: 'user',\r\n                content: message\r\n            }]);\r\n            \r\n            // B·∫≠t tr·∫°ng th√°i loading\r\n            setIsLoading(true);\r\n            \r\n            // G·ªçi API ƒë·ªÉ l·∫•y ph·∫£n h·ªìi t·ª´ bot\r\n            const response = await ApiService.chatWithBot(message);\r\n            \r\n            // Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ bot\r\n            setChatHistory(prev => [...prev, {\r\n                type: 'bot',\r\n                content: response\r\n            }]);\r\n\r\n        } catch (error) {\r\n            console.error('L·ªói:', error);\r\n            // Hi·ªÉn th·ªã th√¥ng b√°o l·ªói\r\n            setChatHistory(prev => [...prev, {\r\n                type: 'bot',\r\n                content: 'Xin l·ªói, t√¥i ƒëang g·∫∑p s·ª± c·ªë. Vui l√≤ng th·ª≠ l·∫°i sau.'\r\n            }]);\r\n        } finally {\r\n            // T·∫Øt tr·∫°ng th√°i loading v√† x√≥a tin nh·∫Øn\r\n            setIsLoading(false);\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            {/* Chat bot icon */}\r\n            <button \r\n                className={`chatbot-toggle ${isOpen ? 'open' : ''}`}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {isOpen ? '√ó' : 'üí¨'}\r\n            </button>\r\n\r\n            {/* Chat window */}\r\n            {isOpen && (\r\n                <div className=\"chatbot-window\">\r\n                    <div className=\"chatbot-header\">\r\n                        <h3>Chat Bot</h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"chatbot-messages\">\r\n                        {chatHistory.map((chat, index) => (\r\n                            <div key={index} className={`message ${chat.type}`}>\r\n                                {chat.content}\r\n                            </div>\r\n                        ))}\r\n                        {isLoading && (\r\n                            <div className=\"message bot loading\">\r\n                                ƒêang nh·∫≠p...\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSubmit} className=\"chatbot-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            placeholder=\"Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n...\"\r\n                            disabled={isLoading}\r\n                        />\r\n                        <button type=\"submit\" disabled={isLoading}>\r\n                            {isLoading ? 'ƒêang g·ª≠i...' : 'G·ª≠i'}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}