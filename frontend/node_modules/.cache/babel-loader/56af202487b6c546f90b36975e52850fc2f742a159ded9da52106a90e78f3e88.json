{"ast":null,"code":"import axios from \"axios\";\nexport default class ApiService {\n  static getHeader() {\n    const token = localStorage.getItem(\"token\");\n    console.log('Current token:', token); // Debug log\n\n    if (!token) {\n      console.warn('No token found in localStorage');\n      return {\n        \"Content-Type\": \"application/json\"\n      };\n    }\n    return {\n      'Authorization': `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    };\n  }\n\n  /**AUTH && USERS API */\n  static async registerUser(registration) {\n    const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\n    return response.data;\n  }\n  static async loginUser(loginDetails) {\n    const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\n    return response.data;\n  }\n  static async getLoggedInUserInfo() {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/user/info`, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching user info:\", error);\n      return null;\n    }\n  }\n  static async getUserById(userId) {\n    const response = await axios.get(`${this.BASE_URL}/user/get-by-id`, {\n      headers: this.getHeader(),\n      params: {\n        id: userId\n      }\n    });\n    return response.data;\n  }\n  static async getAllUsers() {\n    const response = await axios.get(`${this.BASE_URL}/user/get-all`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /**PRODUCT ENDPOINT */\n  static async addProduct(formData) {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': token ? `Bearer ${token}` : undefined\n      }\n    });\n    return response.data;\n  }\n  static async updateProduct(formData) {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      // Log request details\n      console.log('=== DEBUG: Request Details ===');\n      console.log('URL:', `${this.BASE_URL}/product/update`);\n      console.log('Headers:', {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': `Bearer ${token}`\n      });\n      console.log('FormData content:');\n      for (let [key, value] of formData.entries()) {\n        if (key === 'image') {\n          console.log('image:', value ? `File: ${value.name}` : 'No image');\n        } else {\n          console.log(`${key}:`, value, `(type: ${typeof value})`);\n        }\n      }\n      const response = await axios.put(`${this.BASE_URL}/product/update`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('=== DEBUG: Response Success ===');\n      console.log('Status:', response.status);\n      console.log('Data:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$config, _error$config2, _error$config3, _error$response, _error$response2, _error$response3;\n      console.error('=== DEBUG: Error Details ===');\n      console.error('Request Config:', {\n        url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n        method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n        headers: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.headers\n      });\n      console.error('Response Error:', {\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n        data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      });\n      throw error;\n    }\n  }\n  static async getAllProducts() {\n    const response = await axios.get(`${this.BASE_URL}/product/get-all-product`);\n    return response.data;\n  }\n  static async searchProducts(searchValue) {\n    const response = await axios.get(`${this.BASE_URL}/product/search`, {\n      params: {\n        searchValue\n      }\n    });\n    return response.data;\n  }\n  static async getAllProductsByCategoryId(categoryId) {\n    const response = await axios.get(`${this.BASE_URL}/product/get-product-by-category`, {\n      params: {\n        categoryId\n      }\n    });\n    return response.data;\n  }\n  static async getProductById(productId) {\n    const response = await axios.get(`${this.BASE_URL}/product/get-product-by-id`, {\n      params: {\n        id: productId\n      }\n    });\n    return response.data;\n  }\n  static async deleteProduct(productId) {\n    const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /**CATEGORY */\n  static async createCategory(category) {\n    const response = await axios.post(`${this.BASE_URL}/category/create`, category, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async getAllCategory() {\n    const response = await axios.get(`${this.BASE_URL}/category/get-all-category`);\n    return response.data;\n  }\n  static async getCategoryById(categoryId) {\n    const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id`, {\n      params: {\n        categoryId\n      }\n    });\n    return response.data;\n  }\n  static async updateCategory(categoryId, name) {\n    const response = await axios.put(`${this.BASE_URL}/category/update`, null, {\n      headers: this.getHeader(),\n      params: {\n        categoryId,\n        name\n      }\n    });\n    return response.data;\n  }\n  static async deleteCategory(categoryId) {\n    const response = await axios.delete(`${this.BASE_URL}/category/delete`, {\n      headers: this.getHeader(),\n      params: {\n        categoryId\n      }\n    });\n    return response.data;\n  }\n\n  /**ADDRESS */\n  static async saveAddress(address) {\n    try {\n      console.log(\"Saving address:\", address);\n\n      // Đảm bảo chỉ gửi các trường cần thiết\n      const addressDto = {\n        id: address.id || null,\n        street: address.street || '',\n        city: address.city || '',\n        state: address.state || '',\n        country: address.country || ''\n      };\n      const response = await axios.post(`${this.BASE_URL}/address/save`, addressDto, {\n        headers: this.getHeader(),\n        withCredentials: true\n      });\n      console.log(\"Address saved successfully:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error saving address:\", error);\n      if (error.response) {\n        console.error(\"Error response:\", error.response.data);\n      }\n      throw error;\n    }\n  }\n\n  /**CHAT BOT */\n  static async chatWithBot(prompt) {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/bot/chat`, {\n        params: {\n          prompt\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Lỗi khi chat với bot:', error);\n      throw error;\n    }\n  }\n\n  /**AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n  static setupAxiosInterceptors() {\n    axios.interceptors.response.use(response => response, async error => {\n      const originalRequest = error.config;\n\n      // Nếu là lỗi 401 và chưa thử refresh token\n      if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          // Thử refresh token\n          await ApiService.refreshToken();\n\n          // Cập nhật token mới vào header\n          originalRequest.headers['Authorization'] = 'Bearer ' + localStorage.getItem('token');\n\n          // Thử lại request ban đầu\n          return axios(originalRequest);\n        } catch (refreshError) {\n          // Nếu refresh token thất bại\n          ApiService.logout();\n          window.location.href = '/login';\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    });\n  }\n  static async refreshToken() {\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      const response = await axios.post(`${this.BASE_URL}/auth/refresh-token`, {\n        refreshToken\n      });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        return response.data.token;\n      }\n      throw new Error('No token received');\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**REVIEW ENDPOINTS */\n  static async getProductReviews(productId) {\n    const response = await axios.get(`${this.BASE_URL}/reviews/product/${productId}`);\n    return response.data;\n  }\n  static async createReview(review) {\n    const response = await axios.post(`${this.BASE_URL}/reviews`, review, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async updateReview(reviewId, review) {\n    const response = await axios.put(`${this.BASE_URL}/reviews/${reviewId}`, review, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n  static async deleteReview(reviewId) {\n    const response = await axios.delete(`${this.BASE_URL}/reviews/${reviewId}`, {\n      headers: this.getHeader()\n    });\n    return response.data;\n  }\n\n  /**ORDER ENDPOINTS */\n  static async createOrder(orderData) {\n    try {\n      console.log(\"Creating order (raw):\", JSON.stringify(orderData)); // In đầy đủ dữ liệu gốc\n\n      // Đảm bảo dữ liệu gửi đi phù hợp với OrderDTO từ backend\n      const orderDTO = {\n        totalPrice: orderData.totalPrice,\n        paymentMethod: orderData.paymentMethod,\n        shippingAddress: orderData.shippingAddress,\n        // Luôn đặt status rõ ràng, không phụ thuộc vào dữ liệu từ frontend\n        status: \"PENDING\",\n        // Đặt giá trị mặc định là PENDING\n        orderItems: (orderData.orderItems || orderData.items || []).map(item => ({\n          productId: item.productId || item.id,\n          // Hỗ trợ cả hai trường\n          quantity: item.quantity,\n          price: item.price * (item.quantity || 1) // Đảm bảo tính đúng giá\n        }))\n      };\n      console.log(\"Sending to backend:\", JSON.stringify(orderDTO)); // In dữ liệu đã xử lý\n\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(`${this.BASE_URL}/order/create`, orderDTO, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"Order creation response:\", response);\n      return response.data;\n    } catch (error) {\n      console.error(\"Order creation error:\", error);\n      console.error(\"Error details:\", {\n        message: error.message,\n        response: error.response ? {\n          status: error.response.status,\n          data: error.response.data\n        } : 'No response'\n      });\n      throw error;\n    }\n  }\n  static async createVNPayUrl(orderId, amount) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/payment/create`, null, {\n        headers: this.getHeader(),\n        params: {\n          orderId,\n          amount\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"VNPAY error:\", error);\n      throw error;\n    }\n  }\n  static async createZaloPayUrl(orderId, amount) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/zalopay/create-order`, {\n        amount: Math.round(amount),\n        // ZaloPay yêu cầu số nguyên\n        orderId: orderId // Thêm orderId vào request\n      }, {\n        headers: this.getHeader()\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"ZaloPay error:\", error.response || error);\n      throw error;\n    }\n  }\n  static async getOrderStatus(orderId) {\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Checking order status for ID:\", orderId);\n    try {\n      const response = await axios.get(`${this.BASE_URL}/order/${orderId}/status`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(\"Order status response:\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error checking order status:\", error);\n      throw error;\n    }\n  }\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n}\nApiService.BASE_URL = \"http://localhost:8080\";\nApiService.setupAxiosInterceptors();","map":{"version":3,"names":["axios","ApiService","getHeader","token","localStorage","getItem","console","log","warn","registerUser","registration","response","post","BASE_URL","data","loginUser","loginDetails","getLoggedInUserInfo","get","headers","error","getUserById","userId","params","id","getAllUsers","addProduct","formData","undefined","updateProduct","key","value","entries","name","put","status","_error$config","_error$config2","_error$config3","_error$response","_error$response2","_error$response3","url","config","method","statusText","getAllProducts","searchProducts","searchValue","getAllProductsByCategoryId","categoryId","getProductById","productId","deleteProduct","delete","createCategory","category","getAllCategory","getCategoryById","updateCategory","deleteCategory","saveAddress","address","addressDto","street","city","state","country","withCredentials","chatWithBot","prompt","logout","removeItem","isAuthenticated","isAdmin","role","setupAxiosInterceptors","interceptors","use","originalRequest","_retry","refreshToken","refreshError","window","location","href","Promise","reject","setItem","Error","getProductReviews","createReview","review","updateReview","reviewId","deleteReview","createOrder","orderData","JSON","stringify","orderDTO","totalPrice","paymentMethod","shippingAddress","orderItems","items","map","item","quantity","price","message","createVNPayUrl","orderId","amount","createZaloPayUrl","Math","round","getOrderStatus","getToken"],"sources":["C:/Users/MSI GF63/Desktop/ShoppingWeb/frontend/src/service/ApiService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default class ApiService {\r\n\r\n    static BASE_URL = \"http://localhost:8080\";\r\n\r\n    static getHeader() {\r\n        const token = localStorage.getItem(\"token\");\r\n        console.log('Current token:', token); // Debug log\r\n        \r\n        if (!token) {\r\n            console.warn('No token found in localStorage');\r\n            return {\r\n                \"Content-Type\": \"application/json\"\r\n            };\r\n        }\r\n\r\n        return {\r\n            'Authorization': `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n    }\r\n\r\n    /**AUTH && USERS API */\r\n    static async registerUser(registration) {\r\n        const response = await axios.post(`${this.BASE_URL}/auth/register`, registration);\r\n        return response.data;\r\n    }\r\n\r\n    static async loginUser(loginDetails) {\r\n        const response = await axios.post(`${this.BASE_URL}/auth/login`, loginDetails);\r\n        return response.data;\r\n    }\r\n\r\n    static async getLoggedInUserInfo() {\r\n        try {\r\n            const response = await axios.get(`${this.BASE_URL}/user/info`, {\r\n                headers: this.getHeader()\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error fetching user info:\", error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static async getUserById(userId) {\r\n        const response = await axios.get(`${this.BASE_URL}/user/get-by-id`, {\r\n            headers: this.getHeader(),\r\n            params: { id: userId }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getAllUsers() {\r\n        const response = await axios.get(`${this.BASE_URL}/user/get-all`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /**PRODUCT ENDPOINT */\r\n    static async addProduct(formData) {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.post(`${this.BASE_URL}/product/create`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': token ? `Bearer ${token}` : undefined\r\n            }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async updateProduct(formData) {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            \r\n            // Log request details\r\n            console.log('=== DEBUG: Request Details ===');\r\n            console.log('URL:', `${this.BASE_URL}/product/update`);\r\n            console.log('Headers:', {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            });\r\n            console.log('FormData content:');\r\n            for (let [key, value] of formData.entries()) {\r\n                if (key === 'image') {\r\n                    console.log('image:', value ? `File: ${value.name}` : 'No image');\r\n                } else {\r\n                    console.log(`${key}:`, value, `(type: ${typeof value})`);\r\n                }\r\n            }\r\n\r\n            const response = await axios.put(\r\n                `${this.BASE_URL}/product/update`,\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n\r\n            console.log('=== DEBUG: Response Success ===');\r\n            console.log('Status:', response.status);\r\n            console.log('Data:', response.data);\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('=== DEBUG: Error Details ===');\r\n            console.error('Request Config:', {\r\n                url: error.config?.url,\r\n                method: error.config?.method,\r\n                headers: error.config?.headers\r\n            });\r\n            console.error('Response Error:', {\r\n                status: error.response?.status,\r\n                statusText: error.response?.statusText,\r\n                data: error.response?.data\r\n            });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getAllProducts() {\r\n        const response = await axios.get(`${this.BASE_URL}/product/get-all-product`);\r\n        return response.data;\r\n    }\r\n\r\n    static async searchProducts(searchValue) {\r\n        const response = await axios.get(`${this.BASE_URL}/product/search`, {\r\n            params: { searchValue }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getAllProductsByCategoryId(categoryId) {\r\n        const response = await axios.get(`${this.BASE_URL}/product/get-product-by-category`, {\r\n            params: { categoryId }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getProductById(productId) {\r\n        const response = await axios.get(`${this.BASE_URL}/product/get-product-by-id`, {\r\n            params: { id: productId }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteProduct(productId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/product/delete/${productId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /**CATEGORY */\r\n    static async createCategory(category) {\r\n        const response = await axios.post(`${this.BASE_URL}/category/create`, category, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async getAllCategory() {\r\n        const response = await axios.get(`${this.BASE_URL}/category/get-all-category`);\r\n        return response.data;\r\n    }\r\n\r\n    static async getCategoryById(categoryId) {\r\n        const response = await axios.get(`${this.BASE_URL}/category/get-category-by-id`, {\r\n            params: { categoryId }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async updateCategory(categoryId, name) {\r\n        const response = await axios.put(`${this.BASE_URL}/category/update`, null, {\r\n            headers: this.getHeader(),\r\n            params: { categoryId, name }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteCategory(categoryId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/category/delete`, {\r\n            headers: this.getHeader(),\r\n            params: { categoryId }\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /**ADDRESS */\r\n    static async saveAddress(address) {\r\n        try {\r\n            console.log(\"Saving address:\", address);\r\n            \r\n            // Đảm bảo chỉ gửi các trường cần thiết\r\n            const addressDto = {\r\n                id: address.id || null,\r\n                street: address.street || '',\r\n                city: address.city || '',\r\n                state: address.state || '',\r\n                country: address.country || ''\r\n            };\r\n            \r\n            const response = await axios.post(`${this.BASE_URL}/address/save`, addressDto, {\r\n                headers: this.getHeader(),\r\n                withCredentials: true\r\n            });\r\n            \r\n            console.log(\"Address saved successfully:\", response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error saving address:\", error);\r\n            if (error.response) {\r\n                console.error(\"Error response:\", error.response.data);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**CHAT BOT */\r\n    static async chatWithBot(prompt) {\r\n        try {\r\n            const response = await axios.get(`${this.BASE_URL}/bot/chat`, {\r\n                params: { prompt }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi chat với bot:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**AUTHENTICATION CHECKER */\r\n    static logout() {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('role');\r\n    }\r\n\r\n    static isAuthenticated() {\r\n        const token = localStorage.getItem('token');\r\n        return !!token;\r\n    }\r\n\r\n    static isAdmin() {\r\n        const role = localStorage.getItem('role');\r\n        return role === 'ADMIN';\r\n    }\r\n\r\n    static setupAxiosInterceptors() {\r\n        axios.interceptors.response.use(\r\n            (response) => response,\r\n            async (error) => {\r\n                const originalRequest = error.config;\r\n                \r\n                // Nếu là lỗi 401 và chưa thử refresh token\r\n                if (error.response.status === 401 && !originalRequest._retry) {\r\n                    originalRequest._retry = true;\r\n                    \r\n                    try {\r\n                        // Thử refresh token\r\n                        await ApiService.refreshToken();\r\n                        \r\n                        // Cập nhật token mới vào header\r\n                        originalRequest.headers['Authorization'] = \r\n                            'Bearer ' + localStorage.getItem('token');\r\n                            \r\n                        // Thử lại request ban đầu\r\n                        return axios(originalRequest);\r\n                    } catch (refreshError) {\r\n                        // Nếu refresh token thất bại\r\n                        ApiService.logout();\r\n                        window.location.href = '/login';\r\n                        return Promise.reject(refreshError);\r\n                    }\r\n                }\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    static async refreshToken() {\r\n        try {\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            const response = await axios.post(`${this.BASE_URL}/auth/refresh-token`, {\r\n                refreshToken\r\n            });\r\n            \r\n            if (response.data.token) {\r\n                localStorage.setItem('token', response.data.token);\r\n                return response.data.token;\r\n            }\r\n            throw new Error('No token received');\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**REVIEW ENDPOINTS */\r\n    static async getProductReviews(productId) {\r\n        const response = await axios.get(`${this.BASE_URL}/reviews/product/${productId}`);\r\n        return response.data;\r\n    }\r\n\r\n    static async createReview(review) {\r\n        const response = await axios.post(`${this.BASE_URL}/reviews`, review, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async updateReview(reviewId, review) {\r\n        const response = await axios.put(`${this.BASE_URL}/reviews/${reviewId}`, review, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    static async deleteReview(reviewId) {\r\n        const response = await axios.delete(`${this.BASE_URL}/reviews/${reviewId}`, {\r\n            headers: this.getHeader()\r\n        });\r\n        return response.data;\r\n    }\r\n\r\n    /**ORDER ENDPOINTS */\r\n    static async createOrder(orderData) {\r\n        try {\r\n            console.log(\"Creating order (raw):\", JSON.stringify(orderData)); // In đầy đủ dữ liệu gốc\r\n            \r\n            // Đảm bảo dữ liệu gửi đi phù hợp với OrderDTO từ backend\r\n            const orderDTO = {\r\n                totalPrice: orderData.totalPrice,\r\n                paymentMethod: orderData.paymentMethod,\r\n                shippingAddress: orderData.shippingAddress,\r\n                // Luôn đặt status rõ ràng, không phụ thuộc vào dữ liệu từ frontend\r\n                status: \"PENDING\", // Đặt giá trị mặc định là PENDING\r\n                orderItems: (orderData.orderItems || orderData.items || []).map(item => ({\r\n                    productId: item.productId || item.id, // Hỗ trợ cả hai trường\r\n                    quantity: item.quantity,\r\n                    price: item.price * (item.quantity || 1) // Đảm bảo tính đúng giá\r\n                }))\r\n            };\r\n            \r\n            console.log(\"Sending to backend:\", JSON.stringify(orderDTO)); // In dữ liệu đã xử lý\r\n            \r\n            const token = localStorage.getItem(\"token\");\r\n            const response = await axios.post(`${this.BASE_URL}/order/create`, orderDTO, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            \r\n            console.log(\"Order creation response:\", response);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Order creation error:\", error);\r\n            console.error(\"Error details:\", {\r\n                message: error.message,\r\n                response: error.response ? {\r\n                    status: error.response.status,\r\n                    data: error.response.data\r\n                } : 'No response'\r\n            });\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async createVNPayUrl(orderId, amount) {\r\n        try {\r\n            const response = await axios.post(`${this.BASE_URL}/payment/create`, null, {\r\n                headers: this.getHeader(),\r\n                params: { orderId, amount }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"VNPAY error:\", error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async createZaloPayUrl(orderId, amount) {\r\n        try {\r\n            const response = await axios.post(`${this.BASE_URL}/zalopay/create-order`, {\r\n                amount: Math.round(amount),  // ZaloPay yêu cầu số nguyên\r\n                orderId: orderId  // Thêm orderId vào request\r\n            }, {\r\n                headers: this.getHeader()\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"ZaloPay error:\", error.response || error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getOrderStatus(orderId) {\r\n        const token = localStorage.getItem(\"token\");\r\n        console.log(\"Checking order status for ID:\", orderId);\r\n        try {\r\n            const response = await axios.get(`${this.BASE_URL}/order/${orderId}/status`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            console.log(\"Order status response:\", response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Error checking order status:\", error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n}\r\n\r\nApiService.setupAxiosInterceptors();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}