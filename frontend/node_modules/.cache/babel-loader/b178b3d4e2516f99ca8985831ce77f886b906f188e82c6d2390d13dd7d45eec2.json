{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI GF63\\\\Desktop\\\\ShoppingWeb\\\\frontend\\\\src\\\\component\\\\pages\\\\CartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport { useCart } from \"../context/CartContext\";\nimport '../../style/cart.css';\nimport { toast, Toaster } from \"react-hot-toast\";\nimport { useAppContext } from '../../context/AppContext';\nimport { useOrder } from '../context/OrderContext';\n\n// Thêm BASE_URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:8080';\nconst CartPage = () => {\n  _s();\n  const {\n    cart,\n    dispatch\n  } = useCart();\n  const [message, setMessage] = useState(null);\n  const [userAddress, setUserAddress] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState('CASH');\n  const [showCheckoutForm, setShowCheckoutForm] = useState(false);\n  const [selectedItems, setSelectedItems] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState(null); // 'pending', 'success', 'failed'\n  const [paymentPopupWindow, setPaymentPopupWindow] = useState(null);\n  const navigate = useNavigate();\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [statusCheckInterval, setStatusCheckInterval] = useState(null);\n  const [pollingAttempts, setPollingAttempts] = useState(0);\n  const [orderId, setOrderId] = useState(null);\n  const [paymentSuccessful, setPaymentSuccessful] = useState(false);\n  const [paymentFailed, setPaymentFailed] = useState(false);\n  const MAX_POLLING_ATTEMPTS = 20; // Giới hạn số lần thử polling\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n  const {\n    updateCurrentOrder,\n    updatePendingOrder\n  } = useOrder();\n\n  // Khởi tạo selectedItems khi cart thay đổi\n  useEffect(() => {\n    const initialSelected = {};\n    cart.forEach(item => {\n      initialSelected[item.id] = true; // Mặc định chọn tất cả\n    });\n    setSelectedItems(initialSelected);\n  }, [cart]);\n\n  // Lấy thông tin địa chỉ người dùng\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      if (ApiService.isAuthenticated()) {\n        try {\n          const userInfo = await ApiService.getLoggedInUserInfo();\n          if (userInfo && userInfo.address) {\n            setUserAddress(userInfo.address);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user info:\", error);\n        }\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  // Thêm effect để kiểm tra trạng thái thanh toán\n  useEffect(() => {\n    // Hàm kiểm tra trạng thái cửa sổ popup\n    const checkPaymentWindow = () => {\n      // Nếu popup đã mở và đã đóng\n      if (paymentPopupWindow && paymentPopupWindow.closed) {\n        const orderId = localStorage.getItem('pendingOrderId');\n        if (orderId) {\n          setMessage('Đang kiểm tra trạng thái thanh toán...');\n\n          // Kiểm tra trạng thái đơn hàng từ API\n          const checkOrderStatus = async () => {\n            if (isCheckingStatus) return; // Tránh nhiều lần gọi API cùng lúc\n\n            try {\n              setIsCheckingStatus(true);\n              const orderId = localStorage.getItem('pendingOrderId');\n\n              // Kiểm tra liên tục và cập nhật ngay khi nhận được response\n              const orderStatus = await ApiService.getOrderStatus(orderId);\n              console.log(\"Check status response:\", orderStatus);\n\n              // Kiểm tra và cập nhật trạng thái ngay lập tức\n              if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID' || orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\n                handleOrderStatusResponse(orderStatus);\n                // Xóa references để không tiếp tục polling\n                setPaymentPopupWindow(null);\n              } else {\n                // Chỉ cập nhật message nhưng vẫn tiếp tục polling\n                setMessage('Đang chờ xác nhận thanh toán...');\n                setIsCheckingStatus(false);\n              }\n            } catch (error) {\n              console.error(\"Error checking order status:\", error);\n              setIsCheckingStatus(false);\n            }\n          };\n          checkOrderStatus();\n        } else {\n          // Không có ID đơn hàng\n          setPaymentStatus('failed');\n          setMessage('Không tìm thấy thông tin đơn hàng.');\n        }\n\n        // Xóa tham chiếu đến popup\n        setPaymentPopupWindow(null);\n      }\n    };\n\n    // Kiểm tra mỗi 1 giây\n    const intervalId = setInterval(checkPaymentWindow, 1000);\n\n    // Cleanup khi component unmount\n    return () => clearInterval(intervalId);\n  }, [dispatch, paymentPopupWindow, cart, selectedItems, isCheckingStatus]);\n\n  // Thêm vào window object\n  useEffect(() => {\n    const handleBeforeUnload = e => {\n      if (isProcessingPayment) {\n        const message = 'Bạn có đơn hàng đang xử lý. Bạn có chắc chắn muốn rời khỏi trang?';\n        e.returnValue = message;\n        return message;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isProcessingPayment]);\n\n  // Các hàm xử lý giỏ hàng\n  const incrementItem = product => {\n    dispatch({\n      type: 'INCREMENT_ITEM',\n      payload: product\n    });\n  };\n  const decrementItem = product => {\n    const cartItem = cart.find(item => item.id === product.id);\n    if (cartItem && cartItem.quantity > 1) {\n      dispatch({\n        type: 'DECREMENT_ITEM',\n        payload: product\n      });\n    } else {\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: product\n      });\n    }\n  };\n\n  // Xử lý chọn/bỏ chọn sản phẩm\n  const toggleSelectItem = itemId => {\n    setSelectedItems(prev => ({\n      ...prev,\n      [itemId]: !prev[itemId]\n    }));\n  };\n\n  // Chọn/bỏ chọn tất cả sản phẩm\n  const toggleSelectAll = () => {\n    const allSelected = cart.every(item => selectedItems[item.id]);\n    const newSelectedItems = {};\n    cart.forEach(item => {\n      newSelectedItems[item.id] = !allSelected;\n    });\n    setSelectedItems(newSelectedItems);\n  };\n\n  // Tính tổng tiền cho các sản phẩm được chọn\n  const selectedTotalPrice = cart.filter(item => selectedItems[item.id]).reduce((total, item) => total + item.price * item.quantity, 0);\n\n  // Kiểm tra xem có sản phẩm nào được chọn không\n  const hasSelectedItems = cart.some(item => selectedItems[item.id]);\n\n  // Bắt đầu thanh toán\n  const initiateCheckout = () => {\n    if (!hasSelectedItems) {\n      setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\n      setTimeout(() => setMessage(null), 3000);\n      return;\n    }\n    if (!ApiService.isAuthenticated()) {\n      const confirmLogin = window.confirm(\"Bạn cần đăng nhập để tiếp tục thanh toán. Đăng nhập ngay?\");\n      if (confirmLogin) {\n        navigate(\"/login\");\n      }\n      return;\n    }\n    setShowCheckoutForm(true);\n  };\n  const handleAddressChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserAddress(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Xử lý thanh toán\n  const handleCheckout = async () => {\n    if (!userAddress || !userAddress.street || !userAddress.city) {\n      setMessage(\"Vui lòng nhập đầy đủ thông tin địa chỉ\");\n      return;\n    }\n    if (!hasSelectedItems) {\n      setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\n      return;\n    }\n    setPaymentStatus('processing');\n    setMessage(\"Đang xử lý đơn hàng...\");\n    try {\n      // Lưu địa chỉ người dùng trước\n      if (userAddress) {\n        const addressToSave = {\n          id: userAddress.id,\n          street: userAddress.street,\n          city: userAddress.city,\n          state: userAddress.state || '',\n          country: userAddress.country || ''\n        };\n        await ApiService.saveAddress(addressToSave);\n        console.log(\"Address saved successfully\");\n      }\n\n      // Lọc các sản phẩm được chọn\n      const selectedCartItems = cart.filter(item => selectedItems[item.id]);\n\n      // Chuẩn bị dữ liệu đơn hàng\n      const orderItems = selectedCartItems.map(item => ({\n        productId: item.id,\n        quantity: item.quantity,\n        price: item.price // Chỉ truyền giá đơn vị, không nhân với số lượng\n      }));\n      const orderRequest = {\n        totalPrice: selectedTotalPrice,\n        paymentMethod,\n        shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}, ${userAddress.country || ''}`,\n        status: paymentMethod === 'CASH' ? 'PENDING' : 'PROCESSING',\n        orderItems: orderItems\n      };\n\n      // Tạo đơn hàng\n      console.log(\"Sending order request:\", orderRequest);\n      const createdOrder = await ApiService.createOrder(orderRequest);\n      if (!createdOrder || !createdOrder.id) {\n        throw new Error(\"Không nhận được thông tin đơn hàng từ server\");\n      }\n      const orderId = createdOrder.id;\n\n      // Xử lý theo phương thức thanh toán\n      if (paymentMethod === 'CASH') {\n        // Thanh toán khi nhận hàng\n        handleCashPayment(selectedCartItems);\n      } else if (paymentMethod === 'VNPAY') {\n        // Thanh toán qua VNPAY\n        await handleVnpayPayment(orderId);\n      } else if (paymentMethod === 'ZALOPAY') {\n        // Thanh toán qua ZaloPay\n        await handleZalopayPayment(orderId);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Checkout error:\", error);\n      setPaymentStatus('failed');\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Không thể tạo đơn hàng');\n    }\n  };\n\n  // Tách thành các phương thức riêng biệt cho từng loại thanh toán\n  const handleCashPayment = selectedCartItems => {\n    setPaymentStatus('success');\n    setMessage('Đặt hàng thành công! Cảm ơn bạn đã đặt hàng.');\n\n    // Xóa các sản phẩm đã chọn khỏi giỏ hàng\n    selectedCartItems.forEach(item => {\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: item\n      });\n    });\n    setShowCheckoutForm(false);\n  };\n  const handleVnpayPayment = async orderId => {\n    try {\n      const paymentUrl = await ApiService.createVNPayUrl(orderId, selectedTotalPrice);\n\n      // Lưu ID đơn hàng vào localStorage để kiểm tra sau này\n      localStorage.setItem('pendingOrderId', orderId);\n\n      // Mở popup thay vì chuyển hướng\n      const popupWindow = window.open(paymentUrl, 'VNPayPayment', 'width=1000,height=800,left=200,top=100');\n      if (!popupWindow) {\n        throw new Error(\"Không thể mở cửa sổ thanh toán. Vui lòng cho phép popup trên trình duyệt.\");\n      }\n      setPaymentPopupWindow(popupWindow);\n      setMessage('Vui lòng hoàn tất thanh toán trong cửa sổ mới.');\n    } catch (error) {\n      console.error(\"VNPAY error:\", error);\n      throw new Error(`Lỗi khi tạo thanh toán VNPAY: ${error.message || 'Không xác định'}`);\n    }\n  };\n  const handleZalopayPayment = async orderId => {\n    try {\n      const zalopayResponse = await ApiService.createZaloPayOrder({\n        amount: selectedTotalPrice,\n        orderId: orderId\n      });\n\n      // Lưu appTransId để theo dõi\n      localStorage.setItem('zalopay_order_id', orderId);\n\n      // Bắt đầu theo dõi trạng thái thanh toán\n      startPaymentStatusPolling(orderId);\n\n      // Redirect đến trang thanh toán ZaloPay\n      if (zalopayResponse && zalopayResponse.order_url) {\n        window.location.href = zalopayResponse.order_url;\n      }\n    } catch (error) {\n      console.error(\"ZaloPay error:\", error);\n      throw new Error(`Lỗi khi kết nối ZaloPay: ${error.message || 'Lỗi không xác định'}`);\n    }\n  };\n  const handleOrderStatusResponse = orderStatus => {\n    if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID') {\n      // Thanh toán thành công\n      setPaymentStatus('success');\n      setMessage('Thanh toán thành công! Cảm ơn bạn đã đặt hàng.');\n\n      // Xóa các sản phẩm đã chọn khỏi giỏ hàng\n      const selectedCartItems = cart.filter(item => selectedItems[item.id]);\n      selectedCartItems.forEach(item => {\n        dispatch({\n          type: 'REMOVE_ITEM',\n          payload: item\n        });\n      });\n      setShowCheckoutForm(false);\n    } else if (orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\n      // Thanh toán thất bại\n      setPaymentStatus('failed');\n      setMessage('Thanh toán thất bại. Vui lòng thử lại hoặc chọn phương thức thanh toán khác.');\n    } else {\n      // Trạng thái không xác định\n      setPaymentStatus('pending');\n      setMessage('Không thể xác định trạng thái thanh toán. Vui lòng kiểm tra lại sau.');\n    }\n\n    // Xóa ID đơn hàng đang chờ\n    localStorage.removeItem('pendingOrderId');\n    localStorage.removeItem('zalopay_order_id');\n  };\n\n  // Hàm kiểm tra trạng thái đơn hàng\n  async function checkOrderStatus() {\n    try {\n      // Lấy orderId từ state hoặc localStorage nếu cần\n      const orderIdToCheck = orderId || localStorage.getItem('pendingOrderId');\n      if (!orderIdToCheck) {\n        console.error('Order ID is missing for status check');\n        return;\n      }\n      console.log(`Auto checking payment status for order: ${orderIdToCheck}`);\n\n      // Tăng số lần thử\n      setPollingAttempts(prev => prev + 1);\n\n      // Nếu đã thử quá số lần tối đa, dừng polling\n      if (pollingAttempts >= MAX_POLLING_ATTEMPTS) {\n        console.log(\"Reached maximum polling attempts, stopping...\");\n        clearInterval(statusCheckInterval);\n        setStatusCheckInterval(null);\n        toast.warning(\"Không thể cập nhật trạng thái đơn hàng. Vui lòng kiểm tra lại sau.\");\n        return;\n      }\n      const result = await ApiService.getOrderStatus(orderIdToCheck);\n      console.log(\"Payment status check result:\", result);\n      if (result.success) {\n        console.log(`Order status: ${result.status}, Payment status: ${result.paymentStatus}`);\n\n        // Kiểm tra trạng thái thanh toán\n        if (result.paymentStatus === 'PAID') {\n          console.log('Payment successful!');\n          clearInterval(statusCheckInterval);\n          setStatusCheckInterval(null);\n          setPaymentSuccessful(true);\n\n          // Quan trọng: Tắt UI chờ thanh toán\n          setIsProcessingPayment(false);\n          toast.success(\"Thanh toán thành công!\");\n\n          // Xóa giỏ hàng\n          dispatch({\n            type: 'CLEAR_CART'\n          });\n\n          // Xóa dữ liệu lưu trữ\n          localStorage.removeItem('pendingOrderId');\n          localStorage.removeItem('redirectToZaloPay');\n          localStorage.removeItem('orderCreationTime');\n\n          // Chuyển hướng người dùng sau 2 giây\n          setTimeout(() => {\n            navigate('/orders');\n          }, 2000);\n        } else if (result.paymentStatus === 'FAILED') {\n          console.log('Payment failed!');\n          clearInterval(statusCheckInterval);\n          setStatusCheckInterval(null);\n          setPaymentFailed(true);\n\n          // Tắt UI chờ thanh toán\n          setIsProcessingPayment(false);\n          toast.error(\"Thanh toán thất bại!\");\n        }\n      } else {\n        console.warn('Unable to check order status:', result.error);\n      }\n    } catch (error) {\n      console.error('Error in auto polling:', error);\n    }\n  }\n\n  // Hàm bắt đầu polling trạng thái thanh toán\n  const startPaymentStatusPolling = id => {\n    // Xóa interval cũ nếu có\n    if (statusCheckInterval) {\n      clearInterval(statusCheckInterval);\n    }\n\n    // Cập nhật orderId nếu được cung cấp\n    if (id) {\n      setOrderId(id);\n      // Đảm bảo id được lưu vào localStorage\n      localStorage.setItem('pendingOrderId', id);\n    }\n\n    // Reset số lần thử\n    setPollingAttempts(0);\n    console.log(\"Starting payment status polling for order ID:\", id || orderId);\n\n    // Thiết lập polling mới\n    const intervalId = setInterval(checkOrderStatus, 5000);\n    setStatusCheckInterval(intervalId);\n\n    // Tự động dừng sau 5 phút nếu không có kết quả\n    setTimeout(() => {\n      if (statusCheckInterval) {\n        clearInterval(statusCheckInterval);\n        setStatusCheckInterval(null);\n        toast.warning(\"Hết thời gian chờ thanh toán. Vui lòng kiểm tra lại trạng thái đơn hàng.\");\n      }\n    }, 5 * 60 * 1000);\n  };\n\n  // Đảm bảo dọn dẹp khi component unmount\n  useEffect(() => {\n    return () => {\n      if (statusCheckInterval) {\n        clearInterval(statusCheckInterval);\n      }\n    };\n  }, [statusCheckInterval]);\n\n  // Sau khi đặt hàng thành công\n  const handlePlaceOrder = async () => {\n    try {\n      // Validate form\n      if (!userAddress || !userAddress.street || !userAddress.city) {\n        toast.error('Vui lòng nhập địa chỉ giao hàng');\n        return;\n      }\n      console.log(\"Sending order request:\", {\n        orderItems: cart.filter(item => selectedItems[item.id]).map(item => ({\n          productId: item.id,\n          quantity: item.quantity,\n          price: item.price\n        })),\n        totalPrice: selectedTotalPrice,\n        shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}`,\n        paymentMethod: paymentMethod\n      });\n\n      // Tạo order object\n      const orderData = {\n        orderItems: cart.filter(item => selectedItems[item.id]).map(item => ({\n          productId: item.id,\n          quantity: item.quantity,\n          price: item.price\n        })),\n        totalPrice: selectedTotalPrice,\n        shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}`,\n        paymentMethod: paymentMethod,\n        status: paymentMethod === 'ZALOPAY' ? 'PROCESSING' : 'PENDING'\n      };\n\n      // Gửi request đặt hàng\n      const createdOrder = await ApiService.createOrder(orderData);\n      console.log(\"Order created successfully:\", createdOrder);\n\n      // Lưu orderId để theo dõi\n      if (createdOrder && createdOrder.id) {\n        setOrderId(createdOrder.id);\n        localStorage.setItem('pendingOrderId', createdOrder.id);\n      } else {\n        console.error(\"Order created but no ID returned\", createdOrder);\n        toast.error('Lỗi khi tạo đơn hàng: Không tìm thấy ID');\n        return;\n      }\n      toast.success('Đặt hàng thành công!');\n\n      // Xử lý theo phương thức thanh toán\n      if (paymentMethod === 'ZALOPAY') {\n        console.log(\"Creating ZaloPay payment for order:\", createdOrder.id);\n        try {\n          const zalopayResponse = await ApiService.createZaloPayOrder({\n            amount: selectedTotalPrice,\n            orderId: createdOrder.id\n          });\n          console.log(\"Full ZaloPay response:\", zalopayResponse);\n\n          // Lưu thông tin để theo dõi\n          localStorage.setItem('pendingOrderId', createdOrder.id);\n          localStorage.setItem('redirectToZaloPay', 'true');\n          localStorage.setItem('orderCreationTime', new Date().toISOString());\n\n          // Tìm URL thanh toán từ phản hồi\n          let paymentUrl = zalopayResponse.paymentUrl || zalopayResponse.order_url;\n          if (!paymentUrl && zalopayResponse.zalopay_response) {\n            const zalopayResp = zalopayResponse.zalopay_response;\n            if (typeof zalopayResp === 'string') {\n              try {\n                const parsed = JSON.parse(zalopayResp);\n                paymentUrl = parsed.order_url;\n              } catch (e) {\n                console.error(\"Error parsing ZaloPay response:\", e);\n              }\n            } else if (typeof zalopayResp === 'object') {\n              paymentUrl = zalopayResp.order_url;\n            }\n          }\n\n          // Hiển thị thông báo xử lý thanh toán\n          toast.loading('Đang chuẩn bị thanh toán...', {\n            id: 'payment-loading',\n            duration: 2000\n          });\n\n          // Nếu tìm thấy URL, mở popup\n          if (paymentUrl) {\n            console.log(\"Opening ZaloPay payment in popup:\", paymentUrl);\n\n            // Chờ một chút để hiển thị thông báo loading\n            setTimeout(() => {\n              // Đóng toast loading\n              toast.dismiss('payment-loading');\n\n              // Mở popup\n              const popupOpened = openPaymentPopup(paymentUrl);\n              if (!popupOpened) {\n                toast.error('Không thể mở trang thanh toán! Vui lòng cho phép popup.');\n              } else {\n                // Thêm thông báo cho người dùng\n                toast.success('Cửa sổ thanh toán đã mở. Hãy hoàn tất thanh toán của bạn.');\n                // Hiển thị UI chờ thanh toán\n                setIsProcessingPayment(true);\n              }\n            }, 1500);\n          } else {\n            console.error(\"No payment URL found in ZaloPay response:\", zalopayResponse);\n            toast.error('Không tìm thấy URL thanh toán. Vui lòng thử lại sau.');\n          }\n        } catch (error) {\n          console.error(\"Error creating ZaloPay order:\", error);\n          toast.error('Lỗi khi tạo đơn hàng ZaloPay: ' + (error.message || 'Lỗi không xác định'));\n        }\n      } else if (paymentMethod === 'COD') {\n        // Thanh toán COD - chuyển đến trang xác nhận\n        dispatch({\n          type: 'CLEAR_CART'\n        });\n        navigate(`/order-details/${createdOrder.id}`);\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      toast.error('Đặt hàng thất bại: ' + error.message);\n    }\n  };\n\n  // Thêm hàm openPaymentPopup\n  const openPaymentPopup = url => {\n    // Định nghĩa kích thước popup\n    const width = 800;\n    const height = 600;\n    const left = window.innerWidth / 2 - width / 2;\n    const top = window.innerHeight / 2 - height / 2;\n\n    // Mở popup\n    const popup = window.open(url, 'ZaloPayment', `width=${width},height=${height},top=${top},left=${left},toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes`);\n\n    // Kiểm tra xem popup có bị chặn không\n    if (!popup || popup.closed || typeof popup.closed === 'undefined') {\n      toast.error('Popup bị chặn! Vui lòng cho phép popup và thử lại.');\n      return false;\n    }\n\n    // Bắt đầu kiểm tra trạng thái thanh toán\n    startPaymentStatusPolling(orderId);\n\n    // Theo dõi khi popup đóng\n    const popupCheckInterval = setInterval(() => {\n      if (popup.closed) {\n        clearInterval(popupCheckInterval);\n        console.log(\"Payment popup closed, continuing polling for status\");\n        // Không cần ngừng polling ở đây vì chúng ta muốn tiếp tục kiểm tra \n        // xem thanh toán đã hoàn thành hay chưa\n      }\n    }, 1000);\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-page\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gi\\u1ECF h\\xE0ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `response-message ${paymentStatus ? `payment-${paymentStatus}` : ''}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 17\n    }, this), paymentStatus === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-processing-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0110ang x\\u1EED l\\xFD thanh to\\xE1n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vui l\\xF2ng ho\\xE0n t\\u1EA5t thanh to\\xE1n trong c\\u1EEDa s\\u1ED5 m\\u1EDBi.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 17\n    }, this), isProcessingPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-processing-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-processing-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0110ang ch\\u1EDD ho\\xE0n t\\u1EA5t thanh to\\xE1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vui l\\xF2ng ho\\xE0n t\\u1EA5t thanh to\\xE1n trong c\\u1EEDa s\\u1ED5 ZaloPay \\u0111\\xE3 m\\u1EDF.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Trang n\\xE0y s\\u1EBD t\\u1EF1 \\u0111\\u1ED9ng c\\u1EADp nh\\u1EADt khi thanh to\\xE1n ho\\xE0n t\\u1EA5t.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-dot active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0110ang ch\\u1EDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"X\\xE1c nh\\u1EADn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Ho\\xE0n t\\u1EA5t\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-payment-btn\",\n          onClick: () => setIsProcessingPayment(false),\n          children: \"H\\u1EE7y thanh to\\xE1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 17\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gi\\u1ECF h\\xE0ng c\\u1EE7a b\\u1EA1n \\u0111ang tr\\u1ED1ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !showCheckoutForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-all-container\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: cart.length > 0 && cart.every(item => selectedItems[item.id]),\n              onChange: toggleSelectAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 37\n            }, this), \"Ch\\u1ECDn t\\u1EA5t c\\u1EA3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-select\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedItems[item.id] || false,\n                onChange: () => toggleSelectItem(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${BASE_URL}${item.imageUrl}`,\n              alt: item.name,\n              onError: e => {\n                e.target.src = '/images/placeholder.png';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => decrementItem(item),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => incrementItem(item),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", item.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"T\\u1ED5ng c\\u1ED9ng (s\\u1EA3n ph\\u1EA9m \\u0111\\xE3 ch\\u1ECDn): $\", selectedTotalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"checkout-button\",\n          onClick: initiateCheckout,\n          disabled: !hasSelectedItems,\n          children: \"Thanh to\\xE1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Th\\xF4ng tin \\u0111\\u1EB7t h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"T\\xF3m t\\u1EAFt \\u0111\\u01A1n h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: cart.filter(item => selectedItems[item.id]).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.name, \" x \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", (item.price * item.quantity).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 45\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"T\\u1ED5ng c\\u1ED9ng:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"$\", selectedTotalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0110\\u1ECBa ch\\u1EC9 giao h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"street\",\n              placeholder: \"\\u0110\\u1ECBa ch\\u1EC9 \\u0111\\u01B0\\u1EDDng ph\\u1ED1\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.street) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"Th\\xE0nh ph\\u1ED1\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.city) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"state\",\n              placeholder: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.state) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"country\",\n              placeholder: \"Qu\\u1ED1c gia\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.country) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-methods\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ph\\u01B0\\u01A1ng th\\u1EE9c thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"CASH\",\n                checked: paymentMethod === 'CASH',\n                onChange: () => setPaymentMethod('CASH')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 41\n              }, this), \"Thanh to\\xE1n khi nh\\u1EADn h\\xE0ng\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"VNPAY\",\n                checked: paymentMethod === 'VNPAY',\n                onChange: () => setPaymentMethod('VNPAY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 41\n              }, this), \"Thanh to\\xE1n qua VNPAY\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"ZALOPAY\",\n                checked: paymentMethod === 'ZALOPAY',\n                onChange: () => setPaymentMethod('ZALOPAY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 41\n              }, this), \"Thanh to\\xE1n qua ZaloPay\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkout-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setShowCheckoutForm(false),\n            children: \"Quay l\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-button\",\n            onClick: handleCheckout,\n            disabled: paymentStatus === 'processing',\n            children: \"X\\xE1c nh\\u1EADn \\u0111\\u1EB7t h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 17\n    }, this), paymentSuccessful && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-status success\",\n      children: \"Thanh to\\xE1n th\\xE0nh c\\xF4ng! \\u0110ang chuy\\u1EC3n h\\u01B0\\u1EDBng...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 17\n    }, this), paymentFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-status failed\",\n      children: \"Thanh to\\xE1n th\\u1EA5t b\\u1EA1i! Vui l\\xF2ng th\\u1EED l\\u1EA1i ho\\u1EB7c ch\\u1ECDn ph\\u01B0\\u01A1ng th\\u1EE9c thanh to\\xE1n kh\\xE1c.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 660,\n    columnNumber: 9\n  }, this);\n};\n_s(CartPage, \"3OAlo5dMRpmObePL6uKf8ngZbKs=\", false, function () {\n  return [useCart, useNavigate, useOrder];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ApiService","useCart","toast","Toaster","useAppContext","useOrder","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","CartPage","_s","cart","dispatch","message","setMessage","userAddress","setUserAddress","paymentMethod","setPaymentMethod","showCheckoutForm","setShowCheckoutForm","selectedItems","setSelectedItems","paymentStatus","setPaymentStatus","paymentPopupWindow","setPaymentPopupWindow","navigate","isCheckingStatus","setIsCheckingStatus","statusCheckInterval","setStatusCheckInterval","pollingAttempts","setPollingAttempts","orderId","setOrderId","paymentSuccessful","setPaymentSuccessful","paymentFailed","setPaymentFailed","MAX_POLLING_ATTEMPTS","isProcessingPayment","setIsProcessingPayment","updateCurrentOrder","updatePendingOrder","initialSelected","forEach","item","id","fetchUserInfo","isAuthenticated","userInfo","getLoggedInUserInfo","address","error","console","checkPaymentWindow","closed","localStorage","getItem","checkOrderStatus","orderStatus","getOrderStatus","log","status","handleOrderStatusResponse","intervalId","setInterval","clearInterval","handleBeforeUnload","e","returnValue","window","addEventListener","removeEventListener","incrementItem","product","type","payload","decrementItem","cartItem","find","quantity","toggleSelectItem","itemId","prev","toggleSelectAll","allSelected","every","newSelectedItems","selectedTotalPrice","filter","reduce","total","price","hasSelectedItems","some","initiateCheckout","setTimeout","confirmLogin","confirm","handleAddressChange","name","value","target","handleCheckout","street","city","addressToSave","state","country","saveAddress","selectedCartItems","orderItems","map","productId","orderRequest","totalPrice","shippingAddress","createdOrder","createOrder","Error","handleCashPayment","handleVnpayPayment","handleZalopayPayment","_error$response","_error$response$data","response","data","paymentUrl","createVNPayUrl","setItem","popupWindow","open","zalopayResponse","createZaloPayOrder","amount","startPaymentStatusPolling","order_url","location","href","removeItem","orderIdToCheck","warning","result","success","warn","handlePlaceOrder","orderData","Date","toISOString","zalopay_response","zalopayResp","parsed","JSON","parse","loading","duration","dismiss","popupOpened","openPaymentPopup","url","width","height","left","innerWidth","top","innerHeight","popup","popupCheckInterval","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","checked","onChange","src","imageUrl","alt","onError","description","toFixed","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/MSI GF63/Desktop/ShoppingWeb/frontend/src/component/pages/CartPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiService from \"../../service/ApiService\";\r\nimport { useCart } from \"../context/CartContext\";\r\nimport '../../style/cart.css'\r\nimport { toast, Toaster } from \"react-hot-toast\";\r\nimport { useAppContext } from '../../context/AppContext';\r\nimport { useOrder } from '../context/OrderContext';\r\n\r\n// Thêm BASE_URL\r\nconst BASE_URL = 'http://localhost:8080';\r\n\r\nconst CartPage = () => {\r\n    const { cart, dispatch } = useCart();\r\n    const [message, setMessage] = useState(null);\r\n    const [userAddress, setUserAddress] = useState(null);\r\n    const [paymentMethod, setPaymentMethod] = useState('CASH');\r\n    const [showCheckoutForm, setShowCheckoutForm] = useState(false);\r\n    const [selectedItems, setSelectedItems] = useState({});\r\n    const [paymentStatus, setPaymentStatus] = useState(null); // 'pending', 'success', 'failed'\r\n    const [paymentPopupWindow, setPaymentPopupWindow] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [isCheckingStatus, setIsCheckingStatus] = useState(false);\r\n    const [statusCheckInterval, setStatusCheckInterval] = useState(null);\r\n    const [pollingAttempts, setPollingAttempts] = useState(0);\r\n    const [orderId, setOrderId] = useState(null);\r\n    const [paymentSuccessful, setPaymentSuccessful] = useState(false);\r\n    const [paymentFailed, setPaymentFailed] = useState(false);\r\n    const MAX_POLLING_ATTEMPTS = 20; // Giới hạn số lần thử polling\r\n    const [isProcessingPayment, setIsProcessingPayment] = useState(false);\r\n    const { updateCurrentOrder, updatePendingOrder } = useOrder();\r\n\r\n    // Khởi tạo selectedItems khi cart thay đổi\r\n    useEffect(() => {\r\n        const initialSelected = {};\r\n        cart.forEach(item => {\r\n            initialSelected[item.id] = true; // Mặc định chọn tất cả\r\n        });\r\n        setSelectedItems(initialSelected);\r\n    }, [cart]);\r\n\r\n    // Lấy thông tin địa chỉ người dùng\r\n    useEffect(() => {\r\n        const fetchUserInfo = async () => {\r\n            if (ApiService.isAuthenticated()) {\r\n                try {\r\n                    const userInfo = await ApiService.getLoggedInUserInfo();\r\n                    if (userInfo && userInfo.address) {\r\n                        setUserAddress(userInfo.address);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error fetching user info:\", error);\r\n                }\r\n            }\r\n        };\r\n        \r\n        fetchUserInfo();\r\n    }, []);\r\n\r\n    // Thêm effect để kiểm tra trạng thái thanh toán\r\n    useEffect(() => {\r\n        // Hàm kiểm tra trạng thái cửa sổ popup\r\n        const checkPaymentWindow = () => {\r\n            // Nếu popup đã mở và đã đóng\r\n            if (paymentPopupWindow && paymentPopupWindow.closed) {\r\n                const orderId = localStorage.getItem('pendingOrderId');\r\n                \r\n                if (orderId) {\r\n                    setMessage('Đang kiểm tra trạng thái thanh toán...');\r\n                    \r\n                    // Kiểm tra trạng thái đơn hàng từ API\r\n                    const checkOrderStatus = async () => {\r\n                        if (isCheckingStatus) return; // Tránh nhiều lần gọi API cùng lúc\r\n                        \r\n                        try {\r\n                            setIsCheckingStatus(true);\r\n                            const orderId = localStorage.getItem('pendingOrderId');\r\n                            \r\n                            // Kiểm tra liên tục và cập nhật ngay khi nhận được response\r\n                                    const orderStatus = await ApiService.getOrderStatus(orderId);\r\n                            console.log(\"Check status response:\", orderStatus);\r\n                            \r\n                            // Kiểm tra và cập nhật trạng thái ngay lập tức\r\n                            if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID' || \r\n                                orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\r\n                                    handleOrderStatusResponse(orderStatus);\r\n                                // Xóa references để không tiếp tục polling\r\n                                setPaymentPopupWindow(null);\r\n                            } else {\r\n                                // Chỉ cập nhật message nhưng vẫn tiếp tục polling\r\n                                setMessage('Đang chờ xác nhận thanh toán...');\r\n                                    setIsCheckingStatus(false);\r\n                                }\r\n                        } catch (error) {\r\n                            console.error(\"Error checking order status:\", error);\r\n                            setIsCheckingStatus(false);\r\n                        }\r\n                    };\r\n                    \r\n                    checkOrderStatus();\r\n                } else {\r\n                    // Không có ID đơn hàng\r\n                    setPaymentStatus('failed');\r\n                    setMessage('Không tìm thấy thông tin đơn hàng.');\r\n                }\r\n                \r\n                // Xóa tham chiếu đến popup\r\n                setPaymentPopupWindow(null);\r\n            }\r\n        };\r\n        \r\n        // Kiểm tra mỗi 1 giây\r\n        const intervalId = setInterval(checkPaymentWindow, 1000);\r\n        \r\n        // Cleanup khi component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, [dispatch, paymentPopupWindow, cart, selectedItems, isCheckingStatus]);\r\n\r\n    // Thêm vào window object\r\n    useEffect(() => {\r\n        const handleBeforeUnload = (e) => {\r\n            if (isProcessingPayment) {\r\n                const message = 'Bạn có đơn hàng đang xử lý. Bạn có chắc chắn muốn rời khỏi trang?';\r\n                e.returnValue = message;\r\n                return message;\r\n            }\r\n        };\r\n        \r\n        window.addEventListener('beforeunload', handleBeforeUnload);\r\n        \r\n        return () => {\r\n            window.removeEventListener('beforeunload', handleBeforeUnload);\r\n        };\r\n    }, [isProcessingPayment]);\r\n\r\n    // Các hàm xử lý giỏ hàng\r\n    const incrementItem = (product) => {\r\n        dispatch({ type: 'INCREMENT_ITEM', payload: product });\r\n    }\r\n\r\n    const decrementItem = (product) => {\r\n        const cartItem = cart.find(item => item.id === product.id);\r\n        if (cartItem && cartItem.quantity > 1) {\r\n            dispatch({ type: 'DECREMENT_ITEM', payload: product });\r\n        } else {\r\n            dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n        }\r\n    }\r\n\r\n    // Xử lý chọn/bỏ chọn sản phẩm\r\n    const toggleSelectItem = (itemId) => {\r\n        setSelectedItems(prev => ({\r\n            ...prev,\r\n            [itemId]: !prev[itemId]\r\n        }));\r\n    }\r\n\r\n    // Chọn/bỏ chọn tất cả sản phẩm\r\n    const toggleSelectAll = () => {\r\n        const allSelected = cart.every(item => selectedItems[item.id]);\r\n        const newSelectedItems = {};\r\n        \r\n        cart.forEach(item => {\r\n            newSelectedItems[item.id] = !allSelected;\r\n        });\r\n        \r\n        setSelectedItems(newSelectedItems);\r\n    }\r\n\r\n    // Tính tổng tiền cho các sản phẩm được chọn\r\n    const selectedTotalPrice = cart\r\n        .filter(item => selectedItems[item.id])\r\n        .reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n    // Kiểm tra xem có sản phẩm nào được chọn không\r\n    const hasSelectedItems = cart.some(item => selectedItems[item.id]);\r\n\r\n    // Bắt đầu thanh toán\r\n    const initiateCheckout = () => {\r\n        if (!hasSelectedItems) {\r\n            setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\r\n            setTimeout(() => setMessage(null), 3000);\r\n            return;\r\n        }\r\n\r\n        if (!ApiService.isAuthenticated()) {\r\n            const confirmLogin = window.confirm(\r\n                \"Bạn cần đăng nhập để tiếp tục thanh toán. Đăng nhập ngay?\"\r\n            );\r\n            \r\n            if (confirmLogin) {\r\n                navigate(\"/login\");\r\n            }\r\n            return;\r\n        }\r\n        \r\n        setShowCheckoutForm(true);\r\n    }\r\n\r\n    const handleAddressChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserAddress(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    // Xử lý thanh toán\r\n    const handleCheckout = async () => {\r\n        if (!userAddress || !userAddress.street || !userAddress.city) {\r\n            setMessage(\"Vui lòng nhập đầy đủ thông tin địa chỉ\");\r\n            return;\r\n        }\r\n\r\n        if (!hasSelectedItems) {\r\n            setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\r\n            return;\r\n        }\r\n\r\n        setPaymentStatus('processing');\r\n        setMessage(\"Đang xử lý đơn hàng...\");\r\n\r\n        try {\r\n            // Lưu địa chỉ người dùng trước\r\n            if (userAddress) {\r\n                const addressToSave = {\r\n                    id: userAddress.id,\r\n                    street: userAddress.street,\r\n                    city: userAddress.city,\r\n                    state: userAddress.state || '',\r\n                    country: userAddress.country || ''\r\n                };\r\n                \r\n                await ApiService.saveAddress(addressToSave);\r\n                console.log(\"Address saved successfully\");\r\n            }\r\n            \r\n            // Lọc các sản phẩm được chọn\r\n            const selectedCartItems = cart.filter(item => selectedItems[item.id]);\r\n\r\n            // Chuẩn bị dữ liệu đơn hàng\r\n            const orderItems = selectedCartItems.map(item => ({\r\n                productId: item.id,\r\n                quantity: item.quantity,\r\n                price: item.price  // Chỉ truyền giá đơn vị, không nhân với số lượng\r\n            }));\r\n\r\n            const orderRequest = {\r\n                totalPrice: selectedTotalPrice,\r\n                paymentMethod,\r\n                shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}, ${userAddress.country || ''}`,\r\n                status: paymentMethod === 'CASH' ? 'PENDING' : 'PROCESSING',\r\n                orderItems: orderItems\r\n            };\r\n\r\n            // Tạo đơn hàng\r\n            console.log(\"Sending order request:\", orderRequest);\r\n            const createdOrder = await ApiService.createOrder(orderRequest);\r\n            \r\n            if (!createdOrder || !createdOrder.id) {\r\n                throw new Error(\"Không nhận được thông tin đơn hàng từ server\");\r\n            }\r\n            \r\n            const orderId = createdOrder.id;\r\n            \r\n            // Xử lý theo phương thức thanh toán\r\n            if (paymentMethod === 'CASH') {\r\n                // Thanh toán khi nhận hàng\r\n                handleCashPayment(selectedCartItems);\r\n            } else if (paymentMethod === 'VNPAY') {\r\n                // Thanh toán qua VNPAY\r\n                await handleVnpayPayment(orderId);\r\n            } else if (paymentMethod === 'ZALOPAY') {\r\n                // Thanh toán qua ZaloPay\r\n                await handleZalopayPayment(orderId);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Checkout error:\", error);\r\n            setPaymentStatus('failed');\r\n            setMessage(error.response?.data?.message || error.message || 'Không thể tạo đơn hàng');\r\n        }\r\n    };\r\n\r\n    // Tách thành các phương thức riêng biệt cho từng loại thanh toán\r\n    const handleCashPayment = (selectedCartItems) => {\r\n        setPaymentStatus('success');\r\n        setMessage('Đặt hàng thành công! Cảm ơn bạn đã đặt hàng.');\r\n        \r\n        // Xóa các sản phẩm đã chọn khỏi giỏ hàng\r\n        selectedCartItems.forEach(item => {\r\n            dispatch({ type: 'REMOVE_ITEM', payload: item });\r\n        });\r\n        \r\n        setShowCheckoutForm(false);\r\n    };\r\n\r\n    const handleVnpayPayment = async (orderId) => {\r\n        try {\r\n            const paymentUrl = await ApiService.createVNPayUrl(orderId, selectedTotalPrice);\r\n            \r\n            // Lưu ID đơn hàng vào localStorage để kiểm tra sau này\r\n            localStorage.setItem('pendingOrderId', orderId);\r\n            \r\n            // Mở popup thay vì chuyển hướng\r\n            const popupWindow = window.open(\r\n                paymentUrl,\r\n                'VNPayPayment',\r\n                'width=1000,height=800,left=200,top=100'\r\n            );\r\n            \r\n            if (!popupWindow) {\r\n                throw new Error(\"Không thể mở cửa sổ thanh toán. Vui lòng cho phép popup trên trình duyệt.\");\r\n            }\r\n            \r\n            setPaymentPopupWindow(popupWindow);\r\n            setMessage('Vui lòng hoàn tất thanh toán trong cửa sổ mới.');\r\n        } catch (error) {\r\n            console.error(\"VNPAY error:\", error);\r\n            throw new Error(`Lỗi khi tạo thanh toán VNPAY: ${error.message || 'Không xác định'}`);\r\n        }\r\n    };\r\n\r\n    const handleZalopayPayment = async (orderId) => {\r\n        try {\r\n            const zalopayResponse = await ApiService.createZaloPayOrder({\r\n                amount: selectedTotalPrice,\r\n                orderId: orderId\r\n            });\r\n            \r\n            // Lưu appTransId để theo dõi\r\n            localStorage.setItem('zalopay_order_id', orderId);\r\n            \r\n            // Bắt đầu theo dõi trạng thái thanh toán\r\n            startPaymentStatusPolling(orderId);\r\n            \r\n            // Redirect đến trang thanh toán ZaloPay\r\n            if (zalopayResponse && zalopayResponse.order_url) {\r\n                window.location.href = zalopayResponse.order_url;\r\n            }\r\n        } catch (error) {\r\n            console.error(\"ZaloPay error:\", error);\r\n            throw new Error(`Lỗi khi kết nối ZaloPay: ${error.message || 'Lỗi không xác định'}`);\r\n        }\r\n    };\r\n\r\n    const handleOrderStatusResponse = (orderStatus) => {\r\n        if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID') {\r\n            // Thanh toán thành công\r\n            setPaymentStatus('success');\r\n            setMessage('Thanh toán thành công! Cảm ơn bạn đã đặt hàng.');\r\n            \r\n            // Xóa các sản phẩm đã chọn khỏi giỏ hàng\r\n            const selectedCartItems = cart.filter(item => selectedItems[item.id]);\r\n            selectedCartItems.forEach(item => {\r\n                dispatch({ type: 'REMOVE_ITEM', payload: item });\r\n            });\r\n            \r\n            setShowCheckoutForm(false);\r\n        } else if (orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\r\n            // Thanh toán thất bại\r\n            setPaymentStatus('failed');\r\n            setMessage('Thanh toán thất bại. Vui lòng thử lại hoặc chọn phương thức thanh toán khác.');\r\n        } else {\r\n            // Trạng thái không xác định\r\n            setPaymentStatus('pending');\r\n            setMessage('Không thể xác định trạng thái thanh toán. Vui lòng kiểm tra lại sau.');\r\n        }\r\n        \r\n        // Xóa ID đơn hàng đang chờ\r\n        localStorage.removeItem('pendingOrderId');\r\n        localStorage.removeItem('zalopay_order_id');\r\n    };\r\n\r\n    // Hàm kiểm tra trạng thái đơn hàng\r\n    async function checkOrderStatus() {\r\n        try {\r\n            // Lấy orderId từ state hoặc localStorage nếu cần\r\n            const orderIdToCheck = orderId || localStorage.getItem('pendingOrderId');\r\n            \r\n            if (!orderIdToCheck) {\r\n                console.error('Order ID is missing for status check');\r\n                return;\r\n            }\r\n            \r\n            console.log(`Auto checking payment status for order: ${orderIdToCheck}`);\r\n            \r\n            // Tăng số lần thử\r\n            setPollingAttempts(prev => prev + 1);\r\n            \r\n            // Nếu đã thử quá số lần tối đa, dừng polling\r\n            if (pollingAttempts >= MAX_POLLING_ATTEMPTS) {\r\n                console.log(\"Reached maximum polling attempts, stopping...\");\r\n                clearInterval(statusCheckInterval);\r\n                setStatusCheckInterval(null);\r\n                \r\n                toast.warning(\"Không thể cập nhật trạng thái đơn hàng. Vui lòng kiểm tra lại sau.\");\r\n                return;\r\n            }\r\n            \r\n            const result = await ApiService.getOrderStatus(orderIdToCheck);\r\n            console.log(\"Payment status check result:\", result);\r\n            \r\n            if (result.success) {\r\n                console.log(`Order status: ${result.status}, Payment status: ${result.paymentStatus}`);\r\n                \r\n                // Kiểm tra trạng thái thanh toán\r\n                if (result.paymentStatus === 'PAID') {\r\n                    console.log('Payment successful!');\r\n                    clearInterval(statusCheckInterval);\r\n                    setStatusCheckInterval(null);\r\n                    setPaymentSuccessful(true);\r\n                    \r\n                    // Quan trọng: Tắt UI chờ thanh toán\r\n                    setIsProcessingPayment(false);\r\n                    \r\n                    toast.success(\"Thanh toán thành công!\");\r\n                    \r\n                    // Xóa giỏ hàng\r\n                    dispatch({ type: 'CLEAR_CART' });\r\n                    \r\n                    // Xóa dữ liệu lưu trữ\r\n                    localStorage.removeItem('pendingOrderId');\r\n                    localStorage.removeItem('redirectToZaloPay');\r\n                    localStorage.removeItem('orderCreationTime');\r\n                    \r\n                    // Chuyển hướng người dùng sau 2 giây\r\n                    setTimeout(() => {\r\n                        navigate('/orders');\r\n                    }, 2000);\r\n                } \r\n                else if (result.paymentStatus === 'FAILED') {\r\n                    console.log('Payment failed!');\r\n                    clearInterval(statusCheckInterval);\r\n                    setStatusCheckInterval(null);\r\n                    setPaymentFailed(true);\r\n                    \r\n                    // Tắt UI chờ thanh toán\r\n                    setIsProcessingPayment(false);\r\n                    \r\n                    toast.error(\"Thanh toán thất bại!\");\r\n                }\r\n            } else {\r\n                console.warn('Unable to check order status:', result.error);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error in auto polling:', error);\r\n        }\r\n    }\r\n\r\n    // Hàm bắt đầu polling trạng thái thanh toán\r\n    const startPaymentStatusPolling = (id) => {\r\n        // Xóa interval cũ nếu có\r\n        if (statusCheckInterval) {\r\n            clearInterval(statusCheckInterval);\r\n        }\r\n        \r\n        // Cập nhật orderId nếu được cung cấp\r\n        if (id) {\r\n            setOrderId(id);\r\n            // Đảm bảo id được lưu vào localStorage\r\n            localStorage.setItem('pendingOrderId', id);\r\n        }\r\n        \r\n        // Reset số lần thử\r\n        setPollingAttempts(0);\r\n        \r\n        console.log(\"Starting payment status polling for order ID:\", id || orderId);\r\n        \r\n        // Thiết lập polling mới\r\n        const intervalId = setInterval(checkOrderStatus, 5000);\r\n        setStatusCheckInterval(intervalId);\r\n        \r\n        // Tự động dừng sau 5 phút nếu không có kết quả\r\n        setTimeout(() => {\r\n            if (statusCheckInterval) {\r\n                clearInterval(statusCheckInterval);\r\n                setStatusCheckInterval(null);\r\n                toast.warning(\"Hết thời gian chờ thanh toán. Vui lòng kiểm tra lại trạng thái đơn hàng.\");\r\n            }\r\n        }, 5 * 60 * 1000);\r\n    };\r\n\r\n    // Đảm bảo dọn dẹp khi component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (statusCheckInterval) {\r\n                clearInterval(statusCheckInterval);\r\n            }\r\n        };\r\n    }, [statusCheckInterval]);\r\n\r\n    // Sau khi đặt hàng thành công\r\n    const handlePlaceOrder = async () => {\r\n        try {\r\n            // Validate form\r\n            if (!userAddress || !userAddress.street || !userAddress.city) {\r\n                toast.error('Vui lòng nhập địa chỉ giao hàng');\r\n                return;\r\n            }\r\n            \r\n            console.log(\"Sending order request:\", {\r\n                orderItems: cart.filter(item => selectedItems[item.id]).map(item => ({\r\n                    productId: item.id,\r\n                    quantity: item.quantity,\r\n                    price: item.price\r\n                })),\r\n                totalPrice: selectedTotalPrice,\r\n                shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}`,\r\n                paymentMethod: paymentMethod\r\n            });\r\n            \r\n            // Tạo order object\r\n            const orderData = {\r\n                orderItems: cart.filter(item => selectedItems[item.id]).map(item => ({\r\n                    productId: item.id,\r\n                    quantity: item.quantity,\r\n                    price: item.price\r\n                })),\r\n                totalPrice: selectedTotalPrice,\r\n                shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}`,\r\n                paymentMethod: paymentMethod,\r\n                status: paymentMethod === 'ZALOPAY' ? 'PROCESSING' : 'PENDING'\r\n            };\r\n            \r\n            // Gửi request đặt hàng\r\n            const createdOrder = await ApiService.createOrder(orderData);\r\n            console.log(\"Order created successfully:\", createdOrder);\r\n            \r\n            // Lưu orderId để theo dõi\r\n            if (createdOrder && createdOrder.id) {\r\n                setOrderId(createdOrder.id);\r\n                localStorage.setItem('pendingOrderId', createdOrder.id);\r\n            } else {\r\n                console.error(\"Order created but no ID returned\", createdOrder);\r\n                toast.error('Lỗi khi tạo đơn hàng: Không tìm thấy ID');\r\n                return;\r\n            }\r\n            \r\n            toast.success('Đặt hàng thành công!');\r\n            \r\n            // Xử lý theo phương thức thanh toán\r\n            if (paymentMethod === 'ZALOPAY') {\r\n                console.log(\"Creating ZaloPay payment for order:\", createdOrder.id);\r\n                try {\r\n                    const zalopayResponse = await ApiService.createZaloPayOrder({\r\n                        amount: selectedTotalPrice,\r\n                        orderId: createdOrder.id\r\n                    });\r\n                    \r\n                    console.log(\"Full ZaloPay response:\", zalopayResponse);\r\n                    \r\n                    // Lưu thông tin để theo dõi\r\n                    localStorage.setItem('pendingOrderId', createdOrder.id);\r\n                    localStorage.setItem('redirectToZaloPay', 'true');\r\n                    localStorage.setItem('orderCreationTime', new Date().toISOString());\r\n                    \r\n                    // Tìm URL thanh toán từ phản hồi\r\n                    let paymentUrl = zalopayResponse.paymentUrl || zalopayResponse.order_url;\r\n                    \r\n                    if (!paymentUrl && zalopayResponse.zalopay_response) {\r\n                        const zalopayResp = zalopayResponse.zalopay_response;\r\n                        \r\n                        if (typeof zalopayResp === 'string') {\r\n                            try {\r\n                                const parsed = JSON.parse(zalopayResp);\r\n                                paymentUrl = parsed.order_url;\r\n                            } catch (e) {\r\n                                console.error(\"Error parsing ZaloPay response:\", e);\r\n                            }\r\n                        } else if (typeof zalopayResp === 'object') {\r\n                            paymentUrl = zalopayResp.order_url;\r\n                        }\r\n                    }\r\n                    \r\n                    // Hiển thị thông báo xử lý thanh toán\r\n                    toast.loading('Đang chuẩn bị thanh toán...', {\r\n                        id: 'payment-loading',\r\n                        duration: 2000,\r\n                    });\r\n                    \r\n                    // Nếu tìm thấy URL, mở popup\r\n                    if (paymentUrl) {\r\n                        console.log(\"Opening ZaloPay payment in popup:\", paymentUrl);\r\n                        \r\n                        // Chờ một chút để hiển thị thông báo loading\r\n                        setTimeout(() => {\r\n                            // Đóng toast loading\r\n                            toast.dismiss('payment-loading');\r\n                            \r\n                            // Mở popup\r\n                            const popupOpened = openPaymentPopup(paymentUrl);\r\n                            \r\n                            if (!popupOpened) {\r\n                                toast.error('Không thể mở trang thanh toán! Vui lòng cho phép popup.');\r\n                            } else {\r\n                                // Thêm thông báo cho người dùng\r\n                                toast.success('Cửa sổ thanh toán đã mở. Hãy hoàn tất thanh toán của bạn.');\r\n                                // Hiển thị UI chờ thanh toán\r\n                                setIsProcessingPayment(true);\r\n                            }\r\n                        }, 1500);\r\n                        \r\n                    } else {\r\n                        console.error(\"No payment URL found in ZaloPay response:\", zalopayResponse);\r\n                        toast.error('Không tìm thấy URL thanh toán. Vui lòng thử lại sau.');\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error creating ZaloPay order:\", error);\r\n                    toast.error('Lỗi khi tạo đơn hàng ZaloPay: ' + (error.message || 'Lỗi không xác định'));\r\n                }\r\n            } else if (paymentMethod === 'COD') {\r\n                // Thanh toán COD - chuyển đến trang xác nhận\r\n                dispatch({ type: 'CLEAR_CART' });\r\n                navigate(`/order-details/${createdOrder.id}`);\r\n                }\r\n            } catch (error) {\r\n            console.error('Error placing order:', error);\r\n            toast.error('Đặt hàng thất bại: ' + error.message);\r\n            }\r\n    };\r\n\r\n    // Thêm hàm openPaymentPopup\r\n    const openPaymentPopup = (url) => {\r\n        // Định nghĩa kích thước popup\r\n        const width = 800;\r\n        const height = 600;\r\n        const left = window.innerWidth / 2 - width / 2;\r\n        const top = window.innerHeight / 2 - height / 2;\r\n        \r\n        // Mở popup\r\n        const popup = window.open(\r\n            url,\r\n            'ZaloPayment',\r\n            `width=${width},height=${height},top=${top},left=${left},toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes`\r\n        );\r\n        \r\n        // Kiểm tra xem popup có bị chặn không\r\n        if (!popup || popup.closed || typeof popup.closed === 'undefined') {\r\n            toast.error('Popup bị chặn! Vui lòng cho phép popup và thử lại.');\r\n            return false;\r\n        }\r\n        \r\n        // Bắt đầu kiểm tra trạng thái thanh toán\r\n        startPaymentStatusPolling(orderId);\r\n        \r\n        // Theo dõi khi popup đóng\r\n        const popupCheckInterval = setInterval(() => {\r\n            if (popup.closed) {\r\n                clearInterval(popupCheckInterval);\r\n                console.log(\"Payment popup closed, continuing polling for status\");\r\n                // Không cần ngừng polling ở đây vì chúng ta muốn tiếp tục kiểm tra \r\n                // xem thanh toán đã hoàn thành hay chưa\r\n            }\r\n        }, 1000);\r\n        \r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-page\">\r\n            <Toaster position=\"top-right\" />\r\n            <h1>Giỏ hàng</h1>\r\n            {message && (\r\n                <div className={`response-message ${paymentStatus ? `payment-${paymentStatus}` : ''}`}>\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            {paymentStatus === 'processing' && (\r\n                <div className=\"payment-processing-overlay\">\r\n                    <div className=\"processing-content\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>Đang xử lý thanh toán...</p>\r\n                        <p>Vui lòng hoàn tất thanh toán trong cửa sổ mới.</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isProcessingPayment && (\r\n                <div className=\"payment-processing-overlay\">\r\n                    <div className=\"payment-processing-container\">\r\n                        <div className=\"spinner\"></div>\r\n                        <h3>Đang chờ hoàn tất thanh toán</h3>\r\n                        <p>Vui lòng hoàn tất thanh toán trong cửa sổ ZaloPay đã mở.</p>\r\n                        <p>Trang này sẽ tự động cập nhật khi thanh toán hoàn tất.</p>\r\n                        \r\n                        <div className=\"payment-status-indicators\">\r\n                            <div className=\"status-indicator\">\r\n                                <span className=\"status-dot active\"></span>\r\n                                <span>Đang chờ</span>\r\n                            </div>\r\n                            <div className=\"status-indicator\">\r\n                                <span className=\"status-dot\"></span>\r\n                                <span>Xác nhận</span>\r\n                            </div>\r\n                            <div className=\"status-indicator\">\r\n                                <span className=\"status-dot\"></span>\r\n                                <span>Hoàn tất</span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <button className=\"cancel-payment-btn\" onClick={() => setIsProcessingPayment(false)}>\r\n                            Hủy thanh toán\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {cart.length === 0 ? (\r\n                <p>Giỏ hàng của bạn đang trống</p>\r\n            ) : (\r\n                <div>\r\n                    {!showCheckoutForm ? (\r\n                        <>\r\n                            <div className=\"select-all-container\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={cart.length > 0 && cart.every(item => selectedItems[item.id])}\r\n                                        onChange={toggleSelectAll}\r\n                                    />\r\n                                    Chọn tất cả\r\n                                </label>\r\n                            </div>\r\n                            \r\n                            <ul>\r\n                                {cart.map(item => (\r\n                                    <li key={item.id}>\r\n                                        <div className=\"item-select\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedItems[item.id] || false}\r\n                                                onChange={() => toggleSelectItem(item.id)}\r\n                                            />\r\n                                        </div>\r\n                                        <img \r\n                                            src={`${BASE_URL}${item.imageUrl}`}\r\n                                            alt={item.name}\r\n                                            onError={(e) => {\r\n                                                e.target.src = '/images/placeholder.png';\r\n                                            }} \r\n                                        />\r\n                                        <div>\r\n                                            <h2>{item.name}</h2>\r\n                                            <p>{item.description}</p>\r\n                                            <div className=\"quantity-controls\">\r\n                                                <button onClick={() => decrementItem(item)}>-</button>\r\n                                                <span>{item.quantity}</span>\r\n                                                <button onClick={() => incrementItem(item)}>+</button>\r\n                                            </div>\r\n                                            <span>${item.price.toFixed(2)}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                            <h2>Tổng cộng (sản phẩm đã chọn): ${selectedTotalPrice.toFixed(2)}</h2>\r\n                            <button \r\n                                className=\"checkout-button\" \r\n                                onClick={initiateCheckout}\r\n                                disabled={!hasSelectedItems}\r\n                            >\r\n                                Thanh toán\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"checkout-form\">\r\n                            <h2>Thông tin đặt hàng</h2>\r\n                            \r\n                            <div className=\"order-summary\">\r\n                                <h3>Tóm tắt đơn hàng</h3>\r\n                                <ul>\r\n                                    {cart.filter(item => selectedItems[item.id]).map(item => (\r\n                                        <li key={item.id}>\r\n                                            <span>{item.name} x {item.quantity}</span>\r\n                                            <span>${(item.price * item.quantity).toFixed(2)}</span>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <div className=\"total\">\r\n                                    <strong>Tổng cộng:</strong>\r\n                                    <strong>${selectedTotalPrice.toFixed(2)}</strong>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"address-form\">\r\n                                <h3>Địa chỉ giao hàng</h3>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"street\"\r\n                                        placeholder=\"Địa chỉ đường phố\"\r\n                                        value={userAddress?.street || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"city\"\r\n                                        placeholder=\"Thành phố\"\r\n                                        value={userAddress?.city || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"state\"\r\n                                        placeholder=\"Tỉnh/Thành phố\"\r\n                                        value={userAddress?.state || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"country\"\r\n                                        placeholder=\"Quốc gia\"\r\n                                        value={userAddress?.country || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"payment-methods\">\r\n                                <h3>Phương thức thanh toán</h3>\r\n                                <div className=\"payment-options\">\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"paymentMethod\"\r\n                                            value=\"CASH\"\r\n                                            checked={paymentMethod === 'CASH'}\r\n                                            onChange={() => setPaymentMethod('CASH')}\r\n                                        />\r\n                                        Thanh toán khi nhận hàng\r\n                                    </label>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"paymentMethod\"\r\n                                            value=\"VNPAY\"\r\n                                            checked={paymentMethod === 'VNPAY'}\r\n                                            onChange={() => setPaymentMethod('VNPAY')}\r\n                                        />\r\n                                        Thanh toán qua VNPAY\r\n                                    </label>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"paymentMethod\"\r\n                                            value=\"ZALOPAY\"\r\n                                            checked={paymentMethod === 'ZALOPAY'}\r\n                                            onChange={() => setPaymentMethod('ZALOPAY')}\r\n                                        />\r\n                                        Thanh toán qua ZaloPay\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"checkout-actions\">\r\n                                <button className=\"back-button\" onClick={() => setShowCheckoutForm(false)}>Quay lại</button>\r\n                                <button \r\n                                    className=\"confirm-button\" \r\n                                    onClick={handleCheckout}\r\n                                    disabled={paymentStatus === 'processing'}\r\n                                >\r\n                                    Xác nhận đặt hàng\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {paymentSuccessful && (\r\n                <div className=\"payment-status success\">\r\n                    Thanh toán thành công! Đang chuyển hướng...\r\n                </div>\r\n            )}\r\n            \r\n            {paymentFailed && (\r\n                <div className=\"payment-status failed\">\r\n                    Thanh toán thất bại! Vui lòng thử lại hoặc chọn phương thức thanh toán khác.\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}