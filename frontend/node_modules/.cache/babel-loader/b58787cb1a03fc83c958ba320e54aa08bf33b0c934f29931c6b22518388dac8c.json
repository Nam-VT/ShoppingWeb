{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI GF63\\\\Desktop\\\\ShoppingWeb\\\\frontend\\\\src\\\\component\\\\admin\\\\EditProductPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport '../../style/addProduct.css';\nimport ApiService from \"../../service/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProductPage = () => {\n  _s();\n  const {\n    productId\n  } = useParams();\n  const [formData, setFormData] = useState({\n    categoryId: '',\n    name: '',\n    description: '',\n    price: ''\n  });\n  const [categories, setCategories] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchCategories();\n    if (productId) {\n      fetchProduct();\n    }\n  }, [productId]);\n  const fetchCategories = async () => {\n    try {\n      const response = await ApiService.getAllCategory();\n      setCategories(response || []);\n    } catch (error) {\n      setMessage(error.message || 'Failed to load categories');\n    }\n  };\n  const fetchProduct = async () => {\n    try {\n      var _response$categories$;\n      const response = await ApiService.getProductById(productId);\n      setFormData({\n        categoryId: ((_response$categories$ = response.categories[0]) === null || _response$categories$ === void 0 ? void 0 : _response$categories$.id) || '',\n        name: response.name,\n        description: response.description,\n        price: response.price\n      });\n    } catch (error) {\n      setMessage(error.message || 'Failed to load product');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.categoryId || !formData.name || !formData.description || !formData.price) {\n      setMessage('All fields are required');\n      return;\n    }\n    setLoading(true);\n    try {\n      const productData = {\n        productId: parseInt(productId),\n        categoryId: [parseInt(formData.categoryId)],\n        name: formData.name.trim(),\n        description: formData.description.trim(),\n        price: parseFloat(formData.price)\n      };\n      await ApiService.updateProduct(productData);\n      setMessage('Product updated successfully');\n      setTimeout(() => navigate('/admin/products'), 2000);\n    } catch (error) {\n      setMessage(error.message || 'Failed to update product');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"product-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"categoryId\",\n      value: formData.categoryId,\n      onChange: handleChange,\n      disabled: loading,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.id,\n        children: cat.name\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Product name\",\n      value: formData.name,\n      onChange: handleChange,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      value: formData.description,\n      onChange: handleChange,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      placeholder: \"Price\",\n      value: formData.price,\n      onChange: handleChange,\n      step: \"0.01\",\n      min: \"0\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Updating...' : 'Update Product'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(EditProductPage, \"2T3z+iFvMm/pO9LhcGbYwmRl8qY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditProductPage;\nexport default EditProductPage;\nvar _c;\n$RefreshReg$(_c, \"EditProductPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","ApiService","jsxDEV","_jsxDEV","EditProductPage","_s","productId","formData","setFormData","categoryId","name","description","price","categories","setCategories","message","setMessage","loading","setLoading","navigate","fetchCategories","fetchProduct","response","getAllCategory","error","_response$categories$","getProductById","id","handleChange","e","value","target","prev","handleSubmit","preventDefault","productData","parseInt","trim","parseFloat","updateProduct","setTimeout","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","map","cat","type","placeholder","step","min","_c","$RefreshReg$"],"sources":["C:/Users/MSI GF63/Desktop/ShoppingWeb/frontend/src/component/admin/EditProductPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport '../../style/addProduct.css'\r\nimport ApiService from \"../../service/ApiService\";\r\n\r\nconst EditProductPage = () => {\r\n    const { productId } = useParams();\r\n    const [formData, setFormData] = useState({\r\n        categoryId: '',\r\n        name: '',\r\n        description: '',\r\n        price: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n        if (productId) {\r\n            fetchProduct();\r\n        }\r\n    }, [productId]);\r\n\r\n    const fetchCategories = async () => {\r\n        try {\r\n            const response = await ApiService.getAllCategory();\r\n            setCategories(response || []);\r\n        } catch (error) {\r\n            setMessage(error.message || 'Failed to load categories');\r\n        }\r\n    };\r\n\r\n    const fetchProduct = async () => {\r\n        try {\r\n            const response = await ApiService.getProductById(productId);\r\n            setFormData({\r\n                categoryId: response.categories[0]?.id || '',\r\n                name: response.name,\r\n                description: response.description,\r\n                price: response.price\r\n            });\r\n        } catch (error) {\r\n            setMessage(error.message || 'Failed to load product');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!formData.categoryId || !formData.name || !formData.description || !formData.price) {\r\n            setMessage('All fields are required');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const productData = {\r\n                productId: parseInt(productId),\r\n                categoryId: [parseInt(formData.categoryId)],\r\n                name: formData.name.trim(),\r\n                description: formData.description.trim(),\r\n                price: parseFloat(formData.price)\r\n            };\r\n\r\n            await ApiService.updateProduct(productData);\r\n            setMessage('Product updated successfully');\r\n            setTimeout(() => navigate('/admin/products'), 2000);\r\n        } catch (error) {\r\n            setMessage(error.message || 'Failed to update product');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"product-form\">\r\n            <h2>Edit Product</h2>\r\n            {message && <div className=\"message\">{message}</div>}\r\n\r\n            <select \r\n                name=\"categoryId\"\r\n                value={formData.categoryId}\r\n                onChange={handleChange}\r\n                disabled={loading}\r\n            >\r\n                <option value=\"\">Select Category</option>\r\n                {categories.map((cat) => (\r\n                    <option value={cat.id} key={cat.id}>{cat.name}</option>\r\n                ))}\r\n            </select>\r\n\r\n            <input \r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Product name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                disabled={loading}\r\n            />\r\n\r\n            <textarea \r\n                name=\"description\"\r\n                placeholder=\"Description\"\r\n                value={formData.description}\r\n                onChange={handleChange}\r\n                disabled={loading}\r\n            />\r\n\r\n            <input \r\n                type=\"number\"\r\n                name=\"price\"\r\n                placeholder=\"Price\"\r\n                value={formData.price}\r\n                onChange={handleChange}\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                disabled={loading}\r\n            />\r\n\r\n            <button type=\"submit\" disabled={loading}>\r\n                {loading ? 'Updating...' : 'Update Product'}\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EditProductPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}