{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI GF63\\\\Desktop\\\\ShoppingWeb\\\\frontend\\\\src\\\\component\\\\pages\\\\CartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport { useCart } from \"../context/CartContext\";\nimport '../../style/cart.css';\nimport { toast } from \"react-hot-toast\";\n\n// Thêm BASE_URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:8080';\nconst CartPage = () => {\n  _s();\n  const {\n    cart,\n    dispatch\n  } = useCart();\n  const [message, setMessage] = useState(null);\n  const [userAddress, setUserAddress] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState('CASH');\n  const [showCheckoutForm, setShowCheckoutForm] = useState(false);\n  const [selectedItems, setSelectedItems] = useState({});\n  const [paymentStatus, setPaymentStatus] = useState(null); // 'pending', 'success', 'failed'\n  const [paymentPopupWindow, setPaymentPopupWindow] = useState(null);\n  const navigate = useNavigate();\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [statusCheckInterval, setStatusCheckInterval] = useState(null);\n  const [pollingAttempts, setPollingAttempts] = useState(0);\n  const MAX_POLLING_ATTEMPTS = 20; // Giới hạn số lần thử polling\n\n  // Khởi tạo selectedItems khi cart thay đổi\n  useEffect(() => {\n    const initialSelected = {};\n    cart.forEach(item => {\n      initialSelected[item.id] = true; // Mặc định chọn tất cả\n    });\n    setSelectedItems(initialSelected);\n  }, [cart]);\n\n  // Lấy thông tin địa chỉ người dùng\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      if (ApiService.isAuthenticated()) {\n        try {\n          const userInfo = await ApiService.getLoggedInUserInfo();\n          if (userInfo && userInfo.address) {\n            setUserAddress(userInfo.address);\n          }\n        } catch (error) {\n          console.error(\"Error fetching user info:\", error);\n        }\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  // Thêm effect để kiểm tra trạng thái thanh toán\n  useEffect(() => {\n    // Hàm kiểm tra trạng thái cửa sổ popup\n    const checkPaymentWindow = () => {\n      // Nếu popup đã mở và đã đóng\n      if (paymentPopupWindow && paymentPopupWindow.closed) {\n        const orderId = localStorage.getItem('pendingOrderId');\n        if (orderId) {\n          setMessage('Đang kiểm tra trạng thái thanh toán...');\n\n          // Kiểm tra trạng thái đơn hàng từ API\n          const checkOrderStatus = async () => {\n            if (isCheckingStatus) return; // Tránh nhiều lần gọi API cùng lúc\n\n            try {\n              setIsCheckingStatus(true);\n              const orderId = localStorage.getItem('pendingOrderId');\n\n              // Kiểm tra liên tục và cập nhật ngay khi nhận được response\n              const orderStatus = await ApiService.getOrderStatus(orderId);\n              console.log(\"Check status response:\", orderStatus);\n\n              // Kiểm tra và cập nhật trạng thái ngay lập tức\n              if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID' || orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\n                handleOrderStatusResponse(orderStatus);\n                // Xóa references để không tiếp tục polling\n                setPaymentPopupWindow(null);\n              } else {\n                // Chỉ cập nhật message nhưng vẫn tiếp tục polling\n                setMessage('Đang chờ xác nhận thanh toán...');\n                setIsCheckingStatus(false);\n              }\n            } catch (error) {\n              console.error(\"Error checking order status:\", error);\n              setIsCheckingStatus(false);\n            }\n          };\n          checkOrderStatus();\n        } else {\n          // Không có ID đơn hàng\n          setPaymentStatus('failed');\n          setMessage('Không tìm thấy thông tin đơn hàng.');\n        }\n\n        // Xóa tham chiếu đến popup\n        setPaymentPopupWindow(null);\n      }\n    };\n\n    // Kiểm tra mỗi 1 giây\n    const intervalId = setInterval(checkPaymentWindow, 1000);\n\n    // Cleanup khi component unmount\n    return () => clearInterval(intervalId);\n  }, [dispatch, paymentPopupWindow, cart, selectedItems, isCheckingStatus]);\n\n  // Thêm vào window object\n  useEffect(() => {\n    const handleBeforeUnload = e => {\n      if (paymentStatus === 'processing') {\n        const message = 'Bạn có đang trong quá trình thanh toán. Rời khỏi trang này có thể làm gián đoạn giao dịch.';\n        e.returnValue = message;\n        return message;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [paymentStatus]);\n\n  // Các hàm xử lý giỏ hàng\n  const incrementItem = product => {\n    dispatch({\n      type: 'INCREMENT_ITEM',\n      payload: product\n    });\n  };\n  const decrementItem = product => {\n    const cartItem = cart.find(item => item.id === product.id);\n    if (cartItem && cartItem.quantity > 1) {\n      dispatch({\n        type: 'DECREMENT_ITEM',\n        payload: product\n      });\n    } else {\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: product\n      });\n    }\n  };\n\n  // Xử lý chọn/bỏ chọn sản phẩm\n  const toggleSelectItem = itemId => {\n    setSelectedItems(prev => ({\n      ...prev,\n      [itemId]: !prev[itemId]\n    }));\n  };\n\n  // Chọn/bỏ chọn tất cả sản phẩm\n  const toggleSelectAll = () => {\n    const allSelected = cart.every(item => selectedItems[item.id]);\n    const newSelectedItems = {};\n    cart.forEach(item => {\n      newSelectedItems[item.id] = !allSelected;\n    });\n    setSelectedItems(newSelectedItems);\n  };\n\n  // Tính tổng tiền cho các sản phẩm được chọn\n  const selectedTotalPrice = cart.filter(item => selectedItems[item.id]).reduce((total, item) => total + item.price * item.quantity, 0);\n\n  // Kiểm tra xem có sản phẩm nào được chọn không\n  const hasSelectedItems = cart.some(item => selectedItems[item.id]);\n\n  // Bắt đầu thanh toán\n  const initiateCheckout = () => {\n    if (!hasSelectedItems) {\n      setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\n      setTimeout(() => setMessage(null), 3000);\n      return;\n    }\n    if (!ApiService.isAuthenticated()) {\n      const confirmLogin = window.confirm(\"Bạn cần đăng nhập để tiếp tục thanh toán. Đăng nhập ngay?\");\n      if (confirmLogin) {\n        navigate(\"/login\");\n      }\n      return;\n    }\n    setShowCheckoutForm(true);\n  };\n  const handleAddressChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserAddress(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Xử lý thanh toán\n  const handleCheckout = async () => {\n    if (!userAddress || !userAddress.street || !userAddress.city) {\n      setMessage(\"Vui lòng nhập đầy đủ thông tin địa chỉ\");\n      return;\n    }\n    if (!hasSelectedItems) {\n      setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\n      return;\n    }\n    setPaymentStatus('processing');\n    setMessage(\"Đang xử lý đơn hàng...\");\n    try {\n      // Lưu địa chỉ người dùng trước\n      if (userAddress) {\n        const addressToSave = {\n          id: userAddress.id,\n          street: userAddress.street,\n          city: userAddress.city,\n          state: userAddress.state || '',\n          country: userAddress.country || ''\n        };\n        await ApiService.saveAddress(addressToSave);\n        console.log(\"Address saved successfully\");\n      }\n\n      // Lọc các sản phẩm được chọn\n      const selectedCartItems = cart.filter(item => selectedItems[item.id]);\n\n      // Chuẩn bị dữ liệu đơn hàng\n      const orderItems = selectedCartItems.map(item => ({\n        productId: item.id,\n        quantity: item.quantity,\n        price: item.price // Chỉ truyền giá đơn vị, không nhân với số lượng\n      }));\n      const orderRequest = {\n        totalPrice: selectedTotalPrice,\n        paymentMethod,\n        shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}, ${userAddress.country || ''}`,\n        status: paymentMethod === 'CASH' ? 'PENDING' : 'PROCESSING',\n        orderItems: orderItems\n      };\n\n      // Tạo đơn hàng\n      console.log(\"Sending order request:\", orderRequest);\n      const createdOrder = await ApiService.createOrder(orderRequest);\n      if (!createdOrder || !createdOrder.id) {\n        throw new Error(\"Không nhận được thông tin đơn hàng từ server\");\n      }\n      const orderId = createdOrder.id;\n\n      // Xử lý theo phương thức thanh toán\n      if (paymentMethod === 'CASH') {\n        // Thanh toán khi nhận hàng\n        handleCashPayment(selectedCartItems);\n      } else if (paymentMethod === 'VNPAY') {\n        // Thanh toán qua VNPAY\n        await handleVnpayPayment(orderId);\n      } else if (paymentMethod === 'ZALOPAY') {\n        // Thanh toán qua ZaloPay\n        await handleZalopayPayment(orderId);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Checkout error:\", error);\n      setPaymentStatus('failed');\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Không thể tạo đơn hàng');\n    }\n  };\n\n  // Tách thành các phương thức riêng biệt cho từng loại thanh toán\n  const handleCashPayment = selectedCartItems => {\n    setPaymentStatus('success');\n    setMessage('Đặt hàng thành công! Cảm ơn bạn đã đặt hàng.');\n\n    // Xóa các sản phẩm đã chọn khỏi giỏ hàng\n    selectedCartItems.forEach(item => {\n      dispatch({\n        type: 'REMOVE_ITEM',\n        payload: item\n      });\n    });\n    setShowCheckoutForm(false);\n  };\n  const handleVnpayPayment = async orderId => {\n    try {\n      const paymentUrl = await ApiService.createVNPayUrl(orderId, selectedTotalPrice);\n\n      // Lưu ID đơn hàng vào localStorage để kiểm tra sau này\n      localStorage.setItem('pendingOrderId', orderId);\n\n      // Mở popup thay vì chuyển hướng\n      const popupWindow = window.open(paymentUrl, 'VNPayPayment', 'width=1000,height=800,left=200,top=100');\n      if (!popupWindow) {\n        throw new Error(\"Không thể mở cửa sổ thanh toán. Vui lòng cho phép popup trên trình duyệt.\");\n      }\n      setPaymentPopupWindow(popupWindow);\n      setMessage('Vui lòng hoàn tất thanh toán trong cửa sổ mới.');\n    } catch (error) {\n      console.error(\"VNPAY error:\", error);\n      throw new Error(`Lỗi khi tạo thanh toán VNPAY: ${error.message || 'Không xác định'}`);\n    }\n  };\n  const handleZalopayPayment = async orderId => {\n    try {\n      const zaloPayResponse = await ApiService.createZaloPayUrl(orderId, selectedTotalPrice);\n      if (!zaloPayResponse || !zaloPayResponse.zalopay_response) {\n        throw new Error(\"Không nhận được phản hồi hợp lệ từ ZaloPay\");\n      }\n      let zaloPayData;\n      if (typeof zaloPayResponse.zalopay_response === 'string') {\n        zaloPayData = JSON.parse(zaloPayResponse.zalopay_response);\n      } else {\n        zaloPayData = zaloPayResponse.zalopay_response;\n      }\n      if (zaloPayData.return_code !== 1) {\n        throw new Error(`Lỗi ZaloPay: ${zaloPayData.return_message || 'Không thể tạo thanh toán'}`);\n      }\n\n      // Lưu thông tin đơn hàng và app_trans_id\n      localStorage.setItem('pendingOrderId', orderId);\n      localStorage.setItem('zalopay_trans_id', zaloPayResponse.app_trans_id);\n\n      // Mở popup thay vì chuyển hướng\n      const popupWindow = window.open(zaloPayData.order_url, 'ZaloPayPayment', 'width=1000,height=800,left=200,top=100');\n      if (!popupWindow) {\n        throw new Error(\"Không thể mở cửa sổ thanh toán. Vui lòng cho phép popup trên trình duyệt.\");\n      }\n      setPaymentPopupWindow(popupWindow);\n      setMessage('Vui lòng hoàn tất thanh toán trong cửa sổ mới.');\n\n      // Sau khi mở popup thành công, bắt đầu polling ngay\n      const interval = setInterval(async () => {\n        try {\n          console.log(\"Auto checking payment status for order:\", orderId);\n          const status = await ApiService.getOrderStatus(orderId);\n          if (status.paymentStatus === 'PAID' || status.status === 'PAID' || status.paymentStatus === 'FAILED' || status.status === 'FAILED') {\n            // Nếu trạng thái đã xác định, ngừng polling và xử lý kết quả\n            clearInterval(interval);\n            handleOrderStatusResponse(status);\n\n            // Đóng popup nếu vẫn mở\n            if (paymentPopupWindow && !paymentPopupWindow.closed) {\n              paymentPopupWindow.close();\n            }\n            setPaymentPopupWindow(null);\n          }\n        } catch (error) {\n          console.error(\"Error in auto polling:\", error);\n        }\n      }, 5000); // Kiểm tra mỗi 5 giây\n\n      // Lưu interval để có thể clear khi component unmount\n      setStatusCheckInterval(interval);\n    } catch (error) {\n      console.error(\"ZaloPay error:\", error);\n      throw new Error(`Lỗi khi kết nối ZaloPay: ${error.message || 'Lỗi không xác định'}`);\n    }\n  };\n  const handleOrderStatusResponse = orderStatus => {\n    if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID') {\n      // Thanh toán thành công\n      setPaymentStatus('success');\n      setMessage('Thanh toán thành công! Cảm ơn bạn đã đặt hàng.');\n\n      // Xóa các sản phẩm đã chọn khỏi giỏ hàng\n      const selectedCartItems = cart.filter(item => selectedItems[item.id]);\n      selectedCartItems.forEach(item => {\n        dispatch({\n          type: 'REMOVE_ITEM',\n          payload: item\n        });\n      });\n      setShowCheckoutForm(false);\n    } else if (orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\n      // Thanh toán thất bại\n      setPaymentStatus('failed');\n      setMessage('Thanh toán thất bại. Vui lòng thử lại hoặc chọn phương thức thanh toán khác.');\n    } else {\n      // Trạng thái không xác định\n      setPaymentStatus('pending');\n      setMessage('Không thể xác định trạng thái thanh toán. Vui lòng kiểm tra lại sau.');\n    }\n\n    // Xóa ID đơn hàng đang chờ\n    localStorage.removeItem('pendingOrderId');\n    localStorage.removeItem('zalopay_trans_id');\n  };\n\n  // Hàm kiểm tra trạng thái đơn hàng\n  async function checkOrderStatus() {\n    try {\n      console.log(`Auto checking payment status for order: ${orderId}`);\n\n      // Tăng số lần thử\n      setPollingAttempts(prev => prev + 1);\n\n      // Nếu đã thử quá số lần tối đa, dừng polling\n      if (pollingAttempts >= MAX_POLLING_ATTEMPTS) {\n        console.log(\"Reached maximum polling attempts, stopping...\");\n        clearInterval(statusCheckInterval);\n        setStatusCheckInterval(null);\n\n        // Hiển thị thông báo cho người dùng\n        toast.warning(\"Không thể cập nhật trạng thái đơn hàng. Vui lòng kiểm tra lại sau.\");\n        return;\n      }\n      const result = await ApiService.getOrderStatus(orderId);\n      if (result.success) {\n        console.log(`Order status: ${result.status}, Payment status: ${result.paymentStatus}`);\n\n        // Kiểm tra trạng thái thanh toán\n        if (result.paymentStatus === 'PAID') {\n          console.log('Payment successful!');\n          clearInterval(statusCheckInterval);\n          setStatusCheckInterval(null);\n          setPaymentStatus('success');\n          toast.success(\"Thanh toán thành công!\");\n\n          // Chuyển hướng người dùng sau 2 giây\n          setTimeout(() => {\n            navigate('/orders');\n          }, 2000);\n        } else if (result.paymentStatus === 'FAILED') {\n          console.log('Payment failed!');\n          clearInterval(statusCheckInterval);\n          setStatusCheckInterval(null);\n          setPaymentStatus('failed');\n          toast.error(\"Thanh toán thất bại!\");\n        }\n        // Các trạng thái khác, tiếp tục polling\n      } else {\n        console.warn('Unable to check order status:', result.error);\n        // Không dừng polling ngay, tiếp tục thử lần sau\n      }\n    } catch (error) {\n      console.error('Error in auto polling:', error);\n      // Không dừng polling khi có lỗi, chỉ log ra\n    }\n  }\n\n  // Hàm khởi tạo polling khi thanh toán\n  const startPaymentStatusPolling = id => {\n    // Xóa interval cũ nếu có\n    if (statusCheckInterval) {\n      clearInterval(statusCheckInterval);\n    }\n\n    // Reset số lần thử\n    setPollingAttempts(0);\n\n    // Thiết lập polling mới\n    const intervalId = setInterval(checkOrderStatus, 5000); // Kiểm tra mỗi 5 giây\n    setStatusCheckInterval(intervalId);\n\n    // Tự động dừng sau 5 phút nếu không có kết quả\n    setTimeout(() => {\n      if (statusCheckInterval) {\n        clearInterval(statusCheckInterval);\n        setStatusCheckInterval(null);\n        toast.warning(\"Hết thời gian chờ thanh toán. Vui lòng kiểm tra lại trạng thái đơn hàng.\");\n      }\n    }, 5 * 60 * 1000);\n  };\n\n  // Đảm bảo dọn dẹp khi component unmount\n  useEffect(() => {\n    return () => {\n      if (statusCheckInterval) {\n        clearInterval(statusCheckInterval);\n      }\n    };\n  }, [statusCheckInterval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gi\\u1ECF h\\xE0ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `response-message ${paymentStatus ? `payment-${paymentStatus}` : ''}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 17\n    }, this), paymentStatus === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-processing-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0110ang x\\u1EED l\\xFD thanh to\\xE1n...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vui l\\xF2ng ho\\xE0n t\\u1EA5t thanh to\\xE1n trong c\\u1EEDa s\\u1ED5 m\\u1EDBi.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gi\\u1ECF h\\xE0ng c\\u1EE7a b\\u1EA1n \\u0111ang tr\\u1ED1ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !showCheckoutForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-all-container\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: cart.length > 0 && cart.every(item => selectedItems[item.id]),\n              onChange: toggleSelectAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 37\n            }, this), \"Ch\\u1ECDn t\\u1EA5t c\\u1EA3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-select\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedItems[item.id] || false,\n                onChange: () => toggleSelectItem(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${BASE_URL}${item.imageUrl}`,\n              alt: item.name,\n              onError: e => {\n                e.target.src = '/images/placeholder.png';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => decrementItem(item),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => incrementItem(item),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", item.price.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"T\\u1ED5ng c\\u1ED9ng (s\\u1EA3n ph\\u1EA9m \\u0111\\xE3 ch\\u1ECDn): $\", selectedTotalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"checkout-button\",\n          onClick: initiateCheckout,\n          disabled: !hasSelectedItems,\n          children: \"Thanh to\\xE1n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Th\\xF4ng tin \\u0111\\u1EB7t h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"T\\xF3m t\\u1EAFt \\u0111\\u01A1n h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: cart.filter(item => selectedItems[item.id]).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.name, \" x \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", (item.price * item.quantity).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 45\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"T\\u1ED5ng c\\u1ED9ng:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"$\", selectedTotalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"address-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0110\\u1ECBa ch\\u1EC9 giao h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"street\",\n              placeholder: \"\\u0110\\u1ECBa ch\\u1EC9 \\u0111\\u01B0\\u1EDDng ph\\u1ED1\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.street) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"Th\\xE0nh ph\\u1ED1\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.city) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"state\",\n              placeholder: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.state) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"country\",\n              placeholder: \"Qu\\u1ED1c gia\",\n              value: (userAddress === null || userAddress === void 0 ? void 0 : userAddress.country) || '',\n              onChange: handleAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-methods\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ph\\u01B0\\u01A1ng th\\u1EE9c thanh to\\xE1n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"CASH\",\n                checked: paymentMethod === 'CASH',\n                onChange: () => setPaymentMethod('CASH')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 41\n              }, this), \"Thanh to\\xE1n khi nh\\u1EADn h\\xE0ng\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"VNPAY\",\n                checked: paymentMethod === 'VNPAY',\n                onChange: () => setPaymentMethod('VNPAY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 41\n              }, this), \"Thanh to\\xE1n qua VNPAY\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                value: \"ZALOPAY\",\n                checked: paymentMethod === 'ZALOPAY',\n                onChange: () => setPaymentMethod('ZALOPAY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 41\n              }, this), \"Thanh to\\xE1n qua ZaloPay\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkout-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setShowCheckoutForm(false),\n            children: \"Quay l\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-button\",\n            onClick: handleCheckout,\n            disabled: paymentStatus === 'processing',\n            children: \"X\\xE1c nh\\u1EADn \\u0111\\u1EB7t h\\xE0ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 9\n  }, this);\n};\n_s(CartPage, \"NqpW2vMOiFHv7xwG5AY0b5RxRrQ=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ApiService","useCart","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","CartPage","_s","cart","dispatch","message","setMessage","userAddress","setUserAddress","paymentMethod","setPaymentMethod","showCheckoutForm","setShowCheckoutForm","selectedItems","setSelectedItems","paymentStatus","setPaymentStatus","paymentPopupWindow","setPaymentPopupWindow","navigate","isCheckingStatus","setIsCheckingStatus","statusCheckInterval","setStatusCheckInterval","pollingAttempts","setPollingAttempts","MAX_POLLING_ATTEMPTS","initialSelected","forEach","item","id","fetchUserInfo","isAuthenticated","userInfo","getLoggedInUserInfo","address","error","console","checkPaymentWindow","closed","orderId","localStorage","getItem","checkOrderStatus","orderStatus","getOrderStatus","log","status","handleOrderStatusResponse","intervalId","setInterval","clearInterval","handleBeforeUnload","e","returnValue","window","addEventListener","removeEventListener","incrementItem","product","type","payload","decrementItem","cartItem","find","quantity","toggleSelectItem","itemId","prev","toggleSelectAll","allSelected","every","newSelectedItems","selectedTotalPrice","filter","reduce","total","price","hasSelectedItems","some","initiateCheckout","setTimeout","confirmLogin","confirm","handleAddressChange","name","value","target","handleCheckout","street","city","addressToSave","state","country","saveAddress","selectedCartItems","orderItems","map","productId","orderRequest","totalPrice","shippingAddress","createdOrder","createOrder","Error","handleCashPayment","handleVnpayPayment","handleZalopayPayment","_error$response","_error$response$data","response","data","paymentUrl","createVNPayUrl","setItem","popupWindow","open","zaloPayResponse","createZaloPayUrl","zalopay_response","zaloPayData","JSON","parse","return_code","return_message","app_trans_id","order_url","interval","close","removeItem","warning","result","success","warn","startPaymentStatusPolling","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","checked","onChange","src","imageUrl","alt","onError","description","onClick","toFixed","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/MSI GF63/Desktop/ShoppingWeb/frontend/src/component/pages/CartPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiService from \"../../service/ApiService\";\r\nimport { useCart } from \"../context/CartContext\";\r\nimport '../../style/cart.css'\r\nimport { toast } from \"react-hot-toast\";\r\n\r\n// Thêm BASE_URL\r\nconst BASE_URL = 'http://localhost:8080';\r\n\r\nconst CartPage = () => {\r\n    const { cart, dispatch } = useCart();\r\n    const [message, setMessage] = useState(null);\r\n    const [userAddress, setUserAddress] = useState(null);\r\n    const [paymentMethod, setPaymentMethod] = useState('CASH');\r\n    const [showCheckoutForm, setShowCheckoutForm] = useState(false);\r\n    const [selectedItems, setSelectedItems] = useState({});\r\n    const [paymentStatus, setPaymentStatus] = useState(null); // 'pending', 'success', 'failed'\r\n    const [paymentPopupWindow, setPaymentPopupWindow] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [isCheckingStatus, setIsCheckingStatus] = useState(false);\r\n    const [statusCheckInterval, setStatusCheckInterval] = useState(null);\r\n    const [pollingAttempts, setPollingAttempts] = useState(0);\r\n    const MAX_POLLING_ATTEMPTS = 20; // Giới hạn số lần thử polling\r\n\r\n    // Khởi tạo selectedItems khi cart thay đổi\r\n    useEffect(() => {\r\n        const initialSelected = {};\r\n        cart.forEach(item => {\r\n            initialSelected[item.id] = true; // Mặc định chọn tất cả\r\n        });\r\n        setSelectedItems(initialSelected);\r\n    }, [cart]);\r\n\r\n    // Lấy thông tin địa chỉ người dùng\r\n    useEffect(() => {\r\n        const fetchUserInfo = async () => {\r\n            if (ApiService.isAuthenticated()) {\r\n                try {\r\n                    const userInfo = await ApiService.getLoggedInUserInfo();\r\n                    if (userInfo && userInfo.address) {\r\n                        setUserAddress(userInfo.address);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error fetching user info:\", error);\r\n                }\r\n            }\r\n        };\r\n        \r\n        fetchUserInfo();\r\n    }, []);\r\n\r\n    // Thêm effect để kiểm tra trạng thái thanh toán\r\n    useEffect(() => {\r\n        // Hàm kiểm tra trạng thái cửa sổ popup\r\n        const checkPaymentWindow = () => {\r\n            // Nếu popup đã mở và đã đóng\r\n            if (paymentPopupWindow && paymentPopupWindow.closed) {\r\n                const orderId = localStorage.getItem('pendingOrderId');\r\n                \r\n                if (orderId) {\r\n                    setMessage('Đang kiểm tra trạng thái thanh toán...');\r\n                    \r\n                    // Kiểm tra trạng thái đơn hàng từ API\r\n                    const checkOrderStatus = async () => {\r\n                        if (isCheckingStatus) return; // Tránh nhiều lần gọi API cùng lúc\r\n                        \r\n                        try {\r\n                            setIsCheckingStatus(true);\r\n                            const orderId = localStorage.getItem('pendingOrderId');\r\n                            \r\n                            // Kiểm tra liên tục và cập nhật ngay khi nhận được response\r\n                            const orderStatus = await ApiService.getOrderStatus(orderId);\r\n                            console.log(\"Check status response:\", orderStatus);\r\n                            \r\n                            // Kiểm tra và cập nhật trạng thái ngay lập tức\r\n                            if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID' || \r\n                                orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\r\n                                handleOrderStatusResponse(orderStatus);\r\n                                // Xóa references để không tiếp tục polling\r\n                                setPaymentPopupWindow(null);\r\n                            } else {\r\n                                // Chỉ cập nhật message nhưng vẫn tiếp tục polling\r\n                                setMessage('Đang chờ xác nhận thanh toán...');\r\n                                setIsCheckingStatus(false);\r\n                            }\r\n                        } catch (error) {\r\n                            console.error(\"Error checking order status:\", error);\r\n                            setIsCheckingStatus(false);\r\n                        }\r\n                    };\r\n                    \r\n                    checkOrderStatus();\r\n                } else {\r\n                    // Không có ID đơn hàng\r\n                    setPaymentStatus('failed');\r\n                    setMessage('Không tìm thấy thông tin đơn hàng.');\r\n                }\r\n                \r\n                // Xóa tham chiếu đến popup\r\n                setPaymentPopupWindow(null);\r\n            }\r\n        };\r\n        \r\n        // Kiểm tra mỗi 1 giây\r\n        const intervalId = setInterval(checkPaymentWindow, 1000);\r\n        \r\n        // Cleanup khi component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, [dispatch, paymentPopupWindow, cart, selectedItems, isCheckingStatus]);\r\n\r\n    // Thêm vào window object\r\n    useEffect(() => {\r\n        const handleBeforeUnload = (e) => {\r\n            if (paymentStatus === 'processing') {\r\n                const message = 'Bạn có đang trong quá trình thanh toán. Rời khỏi trang này có thể làm gián đoạn giao dịch.';\r\n                e.returnValue = message;\r\n                return message;\r\n            }\r\n        };\r\n        \r\n        window.addEventListener('beforeunload', handleBeforeUnload);\r\n        return () => window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    }, [paymentStatus]);\r\n\r\n    // Các hàm xử lý giỏ hàng\r\n    const incrementItem = (product) => {\r\n        dispatch({ type: 'INCREMENT_ITEM', payload: product });\r\n    }\r\n\r\n    const decrementItem = (product) => {\r\n        const cartItem = cart.find(item => item.id === product.id);\r\n        if (cartItem && cartItem.quantity > 1) {\r\n            dispatch({ type: 'DECREMENT_ITEM', payload: product });\r\n        } else {\r\n            dispatch({ type: 'REMOVE_ITEM', payload: product });\r\n        }\r\n    }\r\n\r\n    // Xử lý chọn/bỏ chọn sản phẩm\r\n    const toggleSelectItem = (itemId) => {\r\n        setSelectedItems(prev => ({\r\n            ...prev,\r\n            [itemId]: !prev[itemId]\r\n        }));\r\n    }\r\n\r\n    // Chọn/bỏ chọn tất cả sản phẩm\r\n    const toggleSelectAll = () => {\r\n        const allSelected = cart.every(item => selectedItems[item.id]);\r\n        const newSelectedItems = {};\r\n        \r\n        cart.forEach(item => {\r\n            newSelectedItems[item.id] = !allSelected;\r\n        });\r\n        \r\n        setSelectedItems(newSelectedItems);\r\n    }\r\n\r\n    // Tính tổng tiền cho các sản phẩm được chọn\r\n    const selectedTotalPrice = cart\r\n        .filter(item => selectedItems[item.id])\r\n        .reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n    // Kiểm tra xem có sản phẩm nào được chọn không\r\n    const hasSelectedItems = cart.some(item => selectedItems[item.id]);\r\n\r\n    // Bắt đầu thanh toán\r\n    const initiateCheckout = () => {\r\n        if (!hasSelectedItems) {\r\n            setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\r\n            setTimeout(() => setMessage(null), 3000);\r\n            return;\r\n        }\r\n\r\n        if (!ApiService.isAuthenticated()) {\r\n            const confirmLogin = window.confirm(\r\n                \"Bạn cần đăng nhập để tiếp tục thanh toán. Đăng nhập ngay?\"\r\n            );\r\n            \r\n            if (confirmLogin) {\r\n                navigate(\"/login\");\r\n            }\r\n            return;\r\n        }\r\n        \r\n        setShowCheckoutForm(true);\r\n    }\r\n\r\n    const handleAddressChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserAddress(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    // Xử lý thanh toán\r\n    const handleCheckout = async () => {\r\n        if (!userAddress || !userAddress.street || !userAddress.city) {\r\n            setMessage(\"Vui lòng nhập đầy đủ thông tin địa chỉ\");\r\n            return;\r\n        }\r\n\r\n        if (!hasSelectedItems) {\r\n            setMessage(\"Vui lòng chọn ít nhất một sản phẩm để thanh toán\");\r\n            return;\r\n        }\r\n\r\n        setPaymentStatus('processing');\r\n        setMessage(\"Đang xử lý đơn hàng...\");\r\n\r\n        try {\r\n            // Lưu địa chỉ người dùng trước\r\n            if (userAddress) {\r\n                const addressToSave = {\r\n                    id: userAddress.id,\r\n                    street: userAddress.street,\r\n                    city: userAddress.city,\r\n                    state: userAddress.state || '',\r\n                    country: userAddress.country || ''\r\n                };\r\n                \r\n                await ApiService.saveAddress(addressToSave);\r\n                console.log(\"Address saved successfully\");\r\n            }\r\n            \r\n            // Lọc các sản phẩm được chọn\r\n            const selectedCartItems = cart.filter(item => selectedItems[item.id]);\r\n\r\n            // Chuẩn bị dữ liệu đơn hàng\r\n            const orderItems = selectedCartItems.map(item => ({\r\n                productId: item.id,\r\n                quantity: item.quantity,\r\n                price: item.price  // Chỉ truyền giá đơn vị, không nhân với số lượng\r\n            }));\r\n\r\n            const orderRequest = {\r\n                totalPrice: selectedTotalPrice,\r\n                paymentMethod,\r\n                shippingAddress: `${userAddress.street}, ${userAddress.city}, ${userAddress.state || ''}, ${userAddress.country || ''}`,\r\n                status: paymentMethod === 'CASH' ? 'PENDING' : 'PROCESSING',\r\n                orderItems: orderItems\r\n            };\r\n\r\n            // Tạo đơn hàng\r\n            console.log(\"Sending order request:\", orderRequest);\r\n            const createdOrder = await ApiService.createOrder(orderRequest);\r\n            \r\n            if (!createdOrder || !createdOrder.id) {\r\n                throw new Error(\"Không nhận được thông tin đơn hàng từ server\");\r\n            }\r\n            \r\n            const orderId = createdOrder.id;\r\n            \r\n            // Xử lý theo phương thức thanh toán\r\n            if (paymentMethod === 'CASH') {\r\n                // Thanh toán khi nhận hàng\r\n                handleCashPayment(selectedCartItems);\r\n            } else if (paymentMethod === 'VNPAY') {\r\n                // Thanh toán qua VNPAY\r\n                await handleVnpayPayment(orderId);\r\n            } else if (paymentMethod === 'ZALOPAY') {\r\n                // Thanh toán qua ZaloPay\r\n                await handleZalopayPayment(orderId);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Checkout error:\", error);\r\n            setPaymentStatus('failed');\r\n            setMessage(error.response?.data?.message || error.message || 'Không thể tạo đơn hàng');\r\n        }\r\n    };\r\n\r\n    // Tách thành các phương thức riêng biệt cho từng loại thanh toán\r\n    const handleCashPayment = (selectedCartItems) => {\r\n        setPaymentStatus('success');\r\n        setMessage('Đặt hàng thành công! Cảm ơn bạn đã đặt hàng.');\r\n        \r\n        // Xóa các sản phẩm đã chọn khỏi giỏ hàng\r\n        selectedCartItems.forEach(item => {\r\n            dispatch({ type: 'REMOVE_ITEM', payload: item });\r\n        });\r\n        \r\n        setShowCheckoutForm(false);\r\n    };\r\n\r\n    const handleVnpayPayment = async (orderId) => {\r\n        try {\r\n            const paymentUrl = await ApiService.createVNPayUrl(orderId, selectedTotalPrice);\r\n            \r\n            // Lưu ID đơn hàng vào localStorage để kiểm tra sau này\r\n            localStorage.setItem('pendingOrderId', orderId);\r\n            \r\n            // Mở popup thay vì chuyển hướng\r\n            const popupWindow = window.open(\r\n                paymentUrl,\r\n                'VNPayPayment',\r\n                'width=1000,height=800,left=200,top=100'\r\n            );\r\n            \r\n            if (!popupWindow) {\r\n                throw new Error(\"Không thể mở cửa sổ thanh toán. Vui lòng cho phép popup trên trình duyệt.\");\r\n            }\r\n            \r\n            setPaymentPopupWindow(popupWindow);\r\n            setMessage('Vui lòng hoàn tất thanh toán trong cửa sổ mới.');\r\n        } catch (error) {\r\n            console.error(\"VNPAY error:\", error);\r\n            throw new Error(`Lỗi khi tạo thanh toán VNPAY: ${error.message || 'Không xác định'}`);\r\n        }\r\n    };\r\n\r\n    const handleZalopayPayment = async (orderId) => {\r\n        try {\r\n            const zaloPayResponse = await ApiService.createZaloPayUrl(orderId, selectedTotalPrice);\r\n            \r\n            if (!zaloPayResponse || !zaloPayResponse.zalopay_response) {\r\n                throw new Error(\"Không nhận được phản hồi hợp lệ từ ZaloPay\");\r\n            }\r\n            \r\n            let zaloPayData;\r\n            if (typeof zaloPayResponse.zalopay_response === 'string') {\r\n                zaloPayData = JSON.parse(zaloPayResponse.zalopay_response);\r\n            } else {\r\n                zaloPayData = zaloPayResponse.zalopay_response;\r\n            }\r\n            \r\n            if (zaloPayData.return_code !== 1) {\r\n                throw new Error(`Lỗi ZaloPay: ${zaloPayData.return_message || 'Không thể tạo thanh toán'}`);\r\n            }\r\n            \r\n            // Lưu thông tin đơn hàng và app_trans_id\r\n            localStorage.setItem('pendingOrderId', orderId);\r\n            localStorage.setItem('zalopay_trans_id', zaloPayResponse.app_trans_id);\r\n            \r\n            // Mở popup thay vì chuyển hướng\r\n            const popupWindow = window.open(\r\n                zaloPayData.order_url,\r\n                'ZaloPayPayment',\r\n                'width=1000,height=800,left=200,top=100'\r\n            );\r\n            \r\n            if (!popupWindow) {\r\n                throw new Error(\"Không thể mở cửa sổ thanh toán. Vui lòng cho phép popup trên trình duyệt.\");\r\n            }\r\n            \r\n            setPaymentPopupWindow(popupWindow);\r\n            setMessage('Vui lòng hoàn tất thanh toán trong cửa sổ mới.');\r\n\r\n            // Sau khi mở popup thành công, bắt đầu polling ngay\r\n            const interval = setInterval(async () => {\r\n                try {\r\n                    console.log(\"Auto checking payment status for order:\", orderId);\r\n                    const status = await ApiService.getOrderStatus(orderId);\r\n                    \r\n                    if (status.paymentStatus === 'PAID' || status.status === 'PAID' ||\r\n                        status.paymentStatus === 'FAILED' || status.status === 'FAILED') {\r\n                        // Nếu trạng thái đã xác định, ngừng polling và xử lý kết quả\r\n                        clearInterval(interval);\r\n                        handleOrderStatusResponse(status);\r\n                        \r\n                        // Đóng popup nếu vẫn mở\r\n                        if (paymentPopupWindow && !paymentPopupWindow.closed) {\r\n                            paymentPopupWindow.close();\r\n                        }\r\n                        \r\n                        setPaymentPopupWindow(null);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error in auto polling:\", error);\r\n                }\r\n            }, 5000); // Kiểm tra mỗi 5 giây\r\n            \r\n            // Lưu interval để có thể clear khi component unmount\r\n            setStatusCheckInterval(interval);\r\n            \r\n        } catch (error) {\r\n            console.error(\"ZaloPay error:\", error);\r\n            throw new Error(`Lỗi khi kết nối ZaloPay: ${error.message || 'Lỗi không xác định'}`);\r\n        }\r\n    };\r\n\r\n    const handleOrderStatusResponse = (orderStatus) => {\r\n        if (orderStatus.paymentStatus === 'PAID' || orderStatus.status === 'PAID') {\r\n            // Thanh toán thành công\r\n            setPaymentStatus('success');\r\n            setMessage('Thanh toán thành công! Cảm ơn bạn đã đặt hàng.');\r\n            \r\n            // Xóa các sản phẩm đã chọn khỏi giỏ hàng\r\n            const selectedCartItems = cart.filter(item => selectedItems[item.id]);\r\n            selectedCartItems.forEach(item => {\r\n                dispatch({ type: 'REMOVE_ITEM', payload: item });\r\n            });\r\n            \r\n            setShowCheckoutForm(false);\r\n        } else if (orderStatus.paymentStatus === 'FAILED' || orderStatus.status === 'FAILED') {\r\n            // Thanh toán thất bại\r\n            setPaymentStatus('failed');\r\n            setMessage('Thanh toán thất bại. Vui lòng thử lại hoặc chọn phương thức thanh toán khác.');\r\n        } else {\r\n            // Trạng thái không xác định\r\n            setPaymentStatus('pending');\r\n            setMessage('Không thể xác định trạng thái thanh toán. Vui lòng kiểm tra lại sau.');\r\n        }\r\n        \r\n        // Xóa ID đơn hàng đang chờ\r\n        localStorage.removeItem('pendingOrderId');\r\n        localStorage.removeItem('zalopay_trans_id');\r\n    };\r\n\r\n    // Hàm kiểm tra trạng thái đơn hàng\r\n    async function checkOrderStatus() {\r\n        try {\r\n            console.log(`Auto checking payment status for order: ${orderId}`);\r\n            \r\n            // Tăng số lần thử\r\n            setPollingAttempts(prev => prev + 1);\r\n            \r\n            // Nếu đã thử quá số lần tối đa, dừng polling\r\n            if (pollingAttempts >= MAX_POLLING_ATTEMPTS) {\r\n                console.log(\"Reached maximum polling attempts, stopping...\");\r\n                clearInterval(statusCheckInterval);\r\n                setStatusCheckInterval(null);\r\n                \r\n                // Hiển thị thông báo cho người dùng\r\n                toast.warning(\"Không thể cập nhật trạng thái đơn hàng. Vui lòng kiểm tra lại sau.\");\r\n                return;\r\n            }\r\n            \r\n            const result = await ApiService.getOrderStatus(orderId);\r\n            \r\n            if (result.success) {\r\n                console.log(`Order status: ${result.status}, Payment status: ${result.paymentStatus}`);\r\n                \r\n                // Kiểm tra trạng thái thanh toán\r\n                if (result.paymentStatus === 'PAID') {\r\n                    console.log('Payment successful!');\r\n                    clearInterval(statusCheckInterval);\r\n                    setStatusCheckInterval(null);\r\n                    setPaymentStatus('success');\r\n                    toast.success(\"Thanh toán thành công!\");\r\n                    \r\n                    // Chuyển hướng người dùng sau 2 giây\r\n                    setTimeout(() => {\r\n                        navigate('/orders');\r\n                    }, 2000);\r\n                } \r\n                else if (result.paymentStatus === 'FAILED') {\r\n                    console.log('Payment failed!');\r\n                    clearInterval(statusCheckInterval);\r\n                    setStatusCheckInterval(null);\r\n                    setPaymentStatus('failed');\r\n                    toast.error(\"Thanh toán thất bại!\");\r\n                }\r\n                // Các trạng thái khác, tiếp tục polling\r\n            } else {\r\n                console.warn('Unable to check order status:', result.error);\r\n                // Không dừng polling ngay, tiếp tục thử lần sau\r\n            }\r\n        } catch (error) {\r\n            console.error('Error in auto polling:', error);\r\n            // Không dừng polling khi có lỗi, chỉ log ra\r\n        }\r\n    }\r\n\r\n    // Hàm khởi tạo polling khi thanh toán\r\n    const startPaymentStatusPolling = (id) => {\r\n        // Xóa interval cũ nếu có\r\n        if (statusCheckInterval) {\r\n            clearInterval(statusCheckInterval);\r\n        }\r\n        \r\n        // Reset số lần thử\r\n        setPollingAttempts(0);\r\n        \r\n        // Thiết lập polling mới\r\n        const intervalId = setInterval(checkOrderStatus, 5000); // Kiểm tra mỗi 5 giây\r\n        setStatusCheckInterval(intervalId);\r\n        \r\n        // Tự động dừng sau 5 phút nếu không có kết quả\r\n        setTimeout(() => {\r\n            if (statusCheckInterval) {\r\n                clearInterval(statusCheckInterval);\r\n                setStatusCheckInterval(null);\r\n                toast.warning(\"Hết thời gian chờ thanh toán. Vui lòng kiểm tra lại trạng thái đơn hàng.\");\r\n            }\r\n        }, 5 * 60 * 1000);\r\n    };\r\n\r\n    // Đảm bảo dọn dẹp khi component unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (statusCheckInterval) {\r\n                clearInterval(statusCheckInterval);\r\n            }\r\n        };\r\n    }, [statusCheckInterval]);\r\n\r\n    return (\r\n        <div className=\"cart-page\">\r\n            <h1>Giỏ hàng</h1>\r\n            {message && (\r\n                <div className={`response-message ${paymentStatus ? `payment-${paymentStatus}` : ''}`}>\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            {paymentStatus === 'processing' && (\r\n                <div className=\"payment-processing-overlay\">\r\n                    <div className=\"processing-content\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>Đang xử lý thanh toán...</p>\r\n                        <p>Vui lòng hoàn tất thanh toán trong cửa sổ mới.</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {cart.length === 0 ? (\r\n                <p>Giỏ hàng của bạn đang trống</p>\r\n            ) : (\r\n                <div>\r\n                    {!showCheckoutForm ? (\r\n                        <>\r\n                            <div className=\"select-all-container\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={cart.length > 0 && cart.every(item => selectedItems[item.id])}\r\n                                        onChange={toggleSelectAll}\r\n                                    />\r\n                                    Chọn tất cả\r\n                                </label>\r\n                            </div>\r\n                            \r\n                            <ul>\r\n                                {cart.map(item => (\r\n                                    <li key={item.id}>\r\n                                        <div className=\"item-select\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedItems[item.id] || false}\r\n                                                onChange={() => toggleSelectItem(item.id)}\r\n                                            />\r\n                                        </div>\r\n                                        <img \r\n                                            src={`${BASE_URL}${item.imageUrl}`}\r\n                                            alt={item.name}\r\n                                            onError={(e) => {\r\n                                                e.target.src = '/images/placeholder.png';\r\n                                            }} \r\n                                        />\r\n                                        <div>\r\n                                            <h2>{item.name}</h2>\r\n                                            <p>{item.description}</p>\r\n                                            <div className=\"quantity-controls\">\r\n                                                <button onClick={() => decrementItem(item)}>-</button>\r\n                                                <span>{item.quantity}</span>\r\n                                                <button onClick={() => incrementItem(item)}>+</button>\r\n                                            </div>\r\n                                            <span>${item.price.toFixed(2)}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                            <h2>Tổng cộng (sản phẩm đã chọn): ${selectedTotalPrice.toFixed(2)}</h2>\r\n                            <button \r\n                                className=\"checkout-button\" \r\n                                onClick={initiateCheckout}\r\n                                disabled={!hasSelectedItems}\r\n                            >\r\n                                Thanh toán\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"checkout-form\">\r\n                            <h2>Thông tin đặt hàng</h2>\r\n                            \r\n                            <div className=\"order-summary\">\r\n                                <h3>Tóm tắt đơn hàng</h3>\r\n                                <ul>\r\n                                    {cart.filter(item => selectedItems[item.id]).map(item => (\r\n                                        <li key={item.id}>\r\n                                            <span>{item.name} x {item.quantity}</span>\r\n                                            <span>${(item.price * item.quantity).toFixed(2)}</span>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <div className=\"total\">\r\n                                    <strong>Tổng cộng:</strong>\r\n                                    <strong>${selectedTotalPrice.toFixed(2)}</strong>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"address-form\">\r\n                                <h3>Địa chỉ giao hàng</h3>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"street\"\r\n                                        placeholder=\"Địa chỉ đường phố\"\r\n                                        value={userAddress?.street || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"city\"\r\n                                        placeholder=\"Thành phố\"\r\n                                        value={userAddress?.city || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"state\"\r\n                                        placeholder=\"Tỉnh/Thành phố\"\r\n                                        value={userAddress?.state || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"country\"\r\n                                        placeholder=\"Quốc gia\"\r\n                                        value={userAddress?.country || ''}\r\n                                        onChange={handleAddressChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"payment-methods\">\r\n                                <h3>Phương thức thanh toán</h3>\r\n                                <div className=\"payment-options\">\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"paymentMethod\"\r\n                                            value=\"CASH\"\r\n                                            checked={paymentMethod === 'CASH'}\r\n                                            onChange={() => setPaymentMethod('CASH')}\r\n                                        />\r\n                                        Thanh toán khi nhận hàng\r\n                                    </label>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"paymentMethod\"\r\n                                            value=\"VNPAY\"\r\n                                            checked={paymentMethod === 'VNPAY'}\r\n                                            onChange={() => setPaymentMethod('VNPAY')}\r\n                                        />\r\n                                        Thanh toán qua VNPAY\r\n                                    </label>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"paymentMethod\"\r\n                                            value=\"ZALOPAY\"\r\n                                            checked={paymentMethod === 'ZALOPAY'}\r\n                                            onChange={() => setPaymentMethod('ZALOPAY')}\r\n                                        />\r\n                                        Thanh toán qua ZaloPay\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"checkout-actions\">\r\n                                <button className=\"back-button\" onClick={() => setShowCheckoutForm(false)}>Quay lại</button>\r\n                                <button \r\n                                    className=\"confirm-button\" \r\n                                    onClick={handleCheckout}\r\n                                    disabled={paymentStatus === 'processing'}\r\n                                >\r\n                                    Xác nhận đặt hàng\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}